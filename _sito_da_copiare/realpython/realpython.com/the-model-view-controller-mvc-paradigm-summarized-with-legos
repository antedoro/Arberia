
<!doctype html>
<html lang="en">
<head>
<link href="https://cdn.realpython.com" rel="preconnect">
<link href="https://files.realpython.com" rel="preconnect">
<title>Model-View-Controller (MVC) Explained – With Legos – Real Python</title>
<meta name="author" content="Real Python">
<meta name="description" content="This article details the Model-View-Controller (MVC) design pattern with Legos!">
<meta name="keywords" content="">
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover">
<link rel="stylesheet" href="https://cdn.realpython.com/static/realpython.min.1ecfd4a9d422.css">
<link rel="stylesheet" href="https://cdn.realpython.com/static/gfonts/font.08e909e5f3d4.css">
<link rel="preload" href="https://cdn.realpython.com/static/glightbox.min.f69035b3cab2.css" as="style" onload="this.onload=null;this.rel='stylesheet'"><noscript><link rel="stylesheet" href="https://cdn.realpython.com/static/glightbox.min.f69035b3cab2.css"></noscript>
<link rel="canonical" href="https://realpython.com/the-model-view-controller-mvc-paradigm-summarized-with-legos/">
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:image" content="https://files.realpython.com/media/legos.5a64247f25d8.png">
<meta property="og:image" content="https://files.realpython.com/media/legos.5a64247f25d8.png">
<meta name="twitter:creator" content="@realpython">
<meta name="twitter:site" content="@realpython">
<meta property="og:title" content="Model-View-Controller (MVC) Explained – With Legos – Real Python">
<meta property="og:type" content="article">
<meta property="og:url" content="https://realpython.com/the-model-view-controller-mvc-paradigm-summarized-with-legos/">
<meta property="og:description" content="This article details the Model-View-Controller (MVC) design pattern with Legos!">
<link href="https://cdn.realpython.com/static/favicon.68cbf4197b0c.png" rel="icon">
<link href="https://realpython.com/atom.xml" rel="alternate" title="Real Python" type="application/atom+xml">
<link rel="manifest" href="/manifest.json">
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-35184939-1', 'auto', {'allowLinker': true});

  
    ga('set', 'anonymizeIp', true);
  

  

  
  
  ga('set', {
    dimension1: false,
    dimension2: false
  });
  

  ga('send', 'pageview');
  
</script>
<script async src='/cdn-cgi/bm/cv/669835187/api.js'></script></head>
<body>
<nav class="navbar fixed-top navbar-expand-lg navbar-dark flex-column ">
<div class="container flex-row">
<a class="navbar-brand" href="/">
<img src="https://cdn.realpython.com/static/real-python-logo.893c30edea53.svg" width="165" height="40" class="d-inline-block align-top" alt="Real Python">
</a>
<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
<span class="navbar-toggler-icon"></span>
</button>
<div class="collapse navbar-collapse navbar-nav-scroll" id="navbarSupportedContent" role="navigation" aria-label="Main Navigation">
<ul class="navbar-nav mr-2 flex-fill">
<li class="nav-item">
<a class="nav-link" href="/start-here/">Start&nbsp;Here</a>
</li>
<li class="nav-item dropdown">
<a class="nav-link dropdown-toggle" href="#" id="navbarDropdownLibrary" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
<span class="fa fa-graduation-cap" aria-hidden="true"></span> Learn Python
</a>
<div class="dropdown-menu" aria-labelledby="navbarDropdownLibrary">
<a class="dropdown-item" href="/" style="color: #ff7e73; line-height: 110%;"><i class="fa fa-fw mr-1 fa-graduation-cap" aria-hidden="true"></i> Python Tutorials →<br><small class="text-secondary">In-depth articles and tutorials</small></a>
<a class="dropdown-item" href="/courses/" style="color: #abe5b1; line-height: 110%;"><i class="fa fa-fw mr-1 fa-film" aria-hidden="true"></i> Video Courses →<br><small class="text-secondary">Step-by-step video lessons</small></a>
<a class="dropdown-item" href="/quizzes/" style="color: #abe0e5; line-height: 110%;"><i class="fa fa-fw mr-1 fa-trophy" aria-hidden="true"></i> Quizzes →<br><small class="text-secondary">Check your learning progress</small></a>
<a class="dropdown-item" href="/learning-paths/" style="color: #ffc873; line-height: 110%;"><i class="fa fa-fw mr-1 fa-map-o" aria-hidden="true"></i> Learning Paths →<br><small class="text-secondary">Guided study plans for accelerated learning</small></a>
<a class="dropdown-item" href="/community/" style="color: #e5c6ab; line-height: 110%;"><i class="fa fa-fw mr-1 fa-slack" aria-hidden="true"></i> Community →<br><small class="text-secondary">Learn with other Pythonistas</small></a>
<a class="dropdown-item pb-3" href="/tutorials/all/" style="color: #b8abe5; line-height: 110%;"><i class="fa fa-fw mr-1 fa-tags" aria-hidden="true"></i> Topics →<br><small class="text-secondary">Focus on a specific area or skill level</small></a>
<a class="dropdown-item border-top" href="/account/join/"><i class="fa fa-fw fa-star text-warning" aria-hidden="true"></i> Unlock All Content</a>
</div>
</li>
<li class="nav-item dropdown">
<a class="nav-link dropdown-toggle" href="#" id="navbarDropdownBooksCourses" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
Store
</a>
<div class="dropdown-menu" aria-labelledby="navbarDropdownBooksCourses">
<a class="dropdown-item" href="/account/join/"><i class="fa fa-fw fa-star text-warning" aria-hidden="true"></i> RP Membership</a>
<a class="dropdown-item" href="/products/python-basics-book/">Python Basics Book</a>
<a class="dropdown-item" href="/products/python-tricks-book/">Python Tricks Book</a>
<a class="dropdown-item" href="/products/cpython-internals-book/">CPython Internals Book</a>
<a class="dropdown-item" href="/products/real-python-course/">The Real Python Course</a>
<a class="dropdown-item" href="/products/managing-python-dependencies/">Managing Python Dependencies</a>
<a class="dropdown-item" href="/products/sublime-python/">Sublime Text + Python Setup</a>
<a class="dropdown-item" href="/products/pythonic-wallpapers/">Pythonic Wallpapers Pack</a>
<a class="dropdown-item" href="https://nerdlettering.com" target="_blank">Python Mugs, T-Shirts, and More</a>
<a class="dropdown-item" href="https://www.pythonistacafe.com" target="_blank">Pythonista Cafe Community</a>
<a class="dropdown-item border-top" href="/products/">Browse All »</a>
</div>
</li>
<li class="nav-item dropdown">
<a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMore" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
More
</a>
<div class="dropdown-menu" aria-labelledby="navbarDropdownMore">
<a class="dropdown-item" href="/newsletter/">Python Newsletter</a>
<a class="dropdown-item" href="/podcasts/rpp/">Python Podcast</a>
<a class="dropdown-item" href="https://www.pythonjobshq.com" target="_blank">Python Job Board</a>
<a class="dropdown-item" href="/team/">Meet the Team</a>
<a class="dropdown-item" href="/write-for-us/">Become a Tutorial Author</a>
<a class="dropdown-item" href="/become-an-instructor/">Become a Video Instructor</a>
</div>
</li>
</ul>
<div class="d-block d-xl-none">
<ul class="navbar-nav">
<li class="nav-item">
<a class="nav-link" href="/search" title="Search"><span class="d-block d-lg-none"><i class="fa fa-search" aria-hidden="true"></i> Search</span><span class="d-none d-lg-block"><i class="fa fa-search" aria-hidden="true"></i></span></a>
</li>
</ul>
</div>
<div class="d-none d-xl-flex align-items-center mr-2">
<form class="form-inline" action="/search" method="GET">
<a class="js-search-form-submit position-absolute" href="/search" title="Search"><i class="fa fa-search fa-fw text-muted pl-2" aria-hidden="true"></i></a>
<input class="search-field form-control form-control-md mr-sm-1 mr-lg-2 w-100" style="padding-left: 2rem;" maxlength=50 type="search" placeholder="Search" aria-label="Search" name="q">
<input type="hidden" name="_from" value="nav">
</form>
</div>
<ul class="navbar-nav">
<li class="nav-item form-inline">
<a class="ml-2 ml-lg-0 btn btn-sm btn-primary px-3" href="/account/join/">Join</a>
</li>
<li class="nav-item">
<a class="btn text-light" href="/account/login/?next=%2Fthe-model-view-controller-mvc-paradigm-summarized-with-legos%2F">Sign&#8209;In</a>
</li>
</ul>
</div>
</div>
</nav>
<div class="container main-content">
<div class="row justify-content-center">
<div class="col-md-11 col-lg-8 article with-headerlinks">
<figure class="embed-responsive embed-responsive-16by9">
<img class="card-img-top m-0 p-0 embed-responsive-item rounded" style="object-fit: contain;" alt="Legos" src="https://files.realpython.com/media/legos.5a64247f25d8.png" width="1000" height="417" srcset="https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/legos.5a64247f25d8.png&amp;w=250&amp;sig=75ec0643ae07d6a323de9307180d0c5873629ce8 250w, https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/legos.5a64247f25d8.png&amp;w=500&amp;sig=c457e73dd2f5bdaedbb7d0365201870ef4d4c88a 500w, https://files.realpython.com/media/legos.5a64247f25d8.png 1000w" sizes="75vw">
</figure>
<h1>Model-View-Controller (MVC) Explained – With Legos</h1>
<div class="mb-0">
<span class="text-muted">by <a class="text-muted" href="/">Real Python</a>
<span class="ml-2 mr-1 fa fa-comments"></span><a class="text-muted" href="#reader-comments"><span class="disqus-comment-count" data-disqus-identifier="https://realpython.com/the-model-view-controller-mvc-paradigm-summarized-with-legos/"></span></a>
<span class="ml-2 fa fa-tags" aria-hidden="true"></span>
<a href="/tutorials/intermediate/" class="badge badge-light text-muted">intermediate</a>
<a href="/tutorials/web-dev/" class="badge badge-light text-muted">web-dev</a>
<div class="d-sm-flex flex-row justify-content-between my-3 text-center">
<div class="jsCompletionStatusWidget btn-group mb-0">
<button title="Click to mark as completed" class="jsBtnCompletion btn btn-secondary border-right " style="border-top-right-radius: 0; border-bottom-right-radius: 0;" disabled>Mark as Completed</button>
<button title="Add bookmark" class="jsBtnBookmark btn btn-secondary border-left" disabled><i class="fa fa-fw fa-bookmark-o"></i></button>
</div>
<div class="align-self-center my-2">
<span>
<a target="_blank" rel="nofollow" href="https://twitter.com/intent/tweet/?text=Check out this %23Python tutorial: Model-View-Controller%20%28MVC%29%20Explained%20%E2%80%93%20With%20Legos by @realpython&url=https%3A//realpython.com/the-model-view-controller-mvc-paradigm-summarized-with-legos/" class="mr-1 badge badge-twitter text-light mb-1"><i class="mr-1 fa fa-twitter text-light"></i>Tweet</a>
<a target="_blank" rel="nofollow" href="https://facebook.com/sharer/sharer.php?u=https%3A//realpython.com/the-model-view-controller-mvc-paradigm-summarized-with-legos/" class="mr-1 badge badge-facebook text-light mb-1"><i class="mr-1 fa fa-facebook text-light"></i>Share</a>
<a target="_blank" rel="nofollow" href="mailto:?subject=Python article for you&body=Check out this Python tutorial:%0A%0AModel-View-Controller%20%28MVC%29%20Explained%20%E2%80%93%20With%20Legos%0A%0Ahttps%3A//realpython.com/the-model-view-controller-mvc-paradigm-summarized-with-legos/" class="badge badge-red text-light mb-1"><i class="mr-1 fa fa-envelope text-light"></i>Email</a>
</span>
</div>
</div>
</div>
<div class="article-body">
<div class="bg-light sidebar-module sidebar-module-inset" id="toc">
<p class="h3 mb-2 text-muted">Table of Contents</p>
<div class="toc">
<ul>
<li><a href="#legos">Legos!</a><ul>
<li><a href="#it-all-starts-with-a-request">It all starts with a request&hellip;</a></li>
<li><a href="#the-request-reaches-the-controller">The request reaches the controller&hellip;</a></li>
<li><a href="#those-building-blocks-are-known-as-models">Those building blocks are known as models&hellip;</a></li>
<li><a href="#so-the-request-comes-in">So the request comes in&hellip;</a></li>
<li><a href="#the-final-product-is-known-as-the-view">The final product is known as the view&hellip;</a></li>
</ul>
</li>
<li><a href="#to-summarize">To summarize&hellip;</a></li>
<li><a href="#from-a-more-technical-standpoint">From a more technical standpoint</a><ul>
<li><a href="#routes">Routes</a></li>
<li><a href="#models-and-controllers">Models and Controllers</a></li>
<li><a href="#views">Views</a></li>
<li><a href="#summary">Summary</a></li>
</ul>
</li>
</ul>
</div>
</div>
<div class="sidebar-module sidebar-module-inset p-0" style="overflow:hidden;">
<div style="display:block;position:relative;">
<div style="display:block;width:100%;padding-top:12.5%;"></div>
<div class="rpad rounded border" data-unit="8x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;"></div>
</div>
<a class="small text-muted" href="/account/join/" rel="nofollow"> <i class="fa fa-info-circle" aria-hidden="true"> </i> Remove ads</a>
</div>
<p>To demonstrate how a web application structured using the <strong><a href="http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller">Model-View-Controller</a></strong> pattern (or <strong>MVC</strong>) works in practice, let’s take a trip down memory lane&hellip;</p>
<div class="alert alert-warning" role="alert">
<p><strong markdown="1">Free Bonus:</strong> <a href="https://realpython.com/bonus/python-oop/" class="alert-link" data-toggle="modal" data-target="#modal-python-oop" data-focus="false" markdown="1">Click here to get access to a free Python OOP Cheat Sheet</a> that points you to the best tutorials, videos, and books to learn more about Object-Oriented Programming with Python.</p>
</div>
<section class="section2" id="legos"><h2>Legos!<a class="headerlink" href="#legos" title="Permanent link"></a></h2>
<p>You’re ten years old, sitting on your family room floor, and in front of you is a big bucket of Legos. There are Legos of all different shapes and sizes. Some blue, tall, and long. Like a tractor trailer. Some red and almost cube shaped. And some are yellow - big wide planes, like sheets of glass. With all these different types of Legos, there’s no telling what you could build.</p>
<p>But surprise, surprise, there’s already a <strong>request</strong>. Your older brother runs up and says, &ldquo;Hey! Build me a spaceship!&rdquo;</p>
<p>&ldquo;Alright,&rdquo; you think, &ldquo;that could actually be pretty cool!&rdquo; A spaceship it is.</p>
<p>So you get to work. You start pulling out the Legos you think you’re going to need. Some big, some small. Different colors for the outside of the spaceship, different colors for the engines. Oh, and different colors for the blaster guns. (You gotta have blaster guns!)</p>
<p>Now that you have all of your <strong>building blocks</strong> in place, it’s time to assemble the spaceship. And after a few hours of hard work, you now have in front of you - a spaceship!</p>
<p>You run to find your brother to show him the finished product. &ldquo;Wow, nice work!&rdquo;, he says. &ldquo;Huh,&rdquo; he thinks, &ldquo;I just asked for that a few hours ago, didn’t have to do a thing, and there it is. I wish <em>everything</em> was that easy.&rdquo;</p>
<hr />
<p>What if I were to tell you that building a web application is exactly like building with Legos?</p>
<div><div class="rounded border border-light" style="display:block;position:relative;"><div style="display:block;width:100%;padding-top:12.5%;"></div><div class="rpad rounded border" data-unit="8x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;"></div></div><a class="small text-muted" href="/account/join/" rel="nofollow"><i aria-hidden="true" class="fa fa-info-circle"> </i> Remove ads</a></div><section class="section3" id="it-all-starts-with-a-request"><h3>It all starts with a <em>request</em>&hellip;<a class="headerlink" href="#it-all-starts-with-a-request" title="Permanent link"></a></h3>
<p>In the case of the Legos, it was your brother who asked you to build something. In the case of a web app, it’s a user entering a URL, requesting to view a certain page.</p>
<p>So your brother is the user.</p>
</section><section class="section3" id="the-request-reaches-the-controller"><h3>The request reaches the <em>controller</em>&hellip;<a class="headerlink" href="#the-request-reaches-the-controller" title="Permanent link"></a></h3>
<p>With the Legos, you are the controller.</p>
<p>The controller is responsible for grabbing all of the necessary <strong>building blocks</strong> and organizing them as necessary.</p>
</section><section class="section3" id="those-building-blocks-are-known-as-models"><h3>Those building blocks are known as <em>models</em>&hellip;<a class="headerlink" href="#those-building-blocks-are-known-as-models" title="Permanent link"></a></h3>
<p>The different types of Legos are the models. You have all different sizes and shapes, and you grab the ones you need to build the spaceship. In a web app, models help the controller retrieve all of the information it needs from the database.</p>
</section><section class="section3" id="so-the-request-comes-in"><h3>So the request comes in&hellip;<a class="headerlink" href="#so-the-request-comes-in" title="Permanent link"></a></h3>
<p>The controller (you) receives the request.</p>
<p>It goes to the models (Legos) to retrieve the necessary items.</p>
<p>And now everything is in place to produce the final product.</p>
</section><section class="section3" id="the-final-product-is-known-as-the-view"><h3>The final product is known as the <em>view</em>&hellip;<a class="headerlink" href="#the-final-product-is-known-as-the-view" title="Permanent link"></a></h3>
<p>The spaceship is the view. It’s the final product that’s ultimately shown to the person who made the request (your brother).</p>
<p>In a web application, the view is the final page the user sees in their browser.</p>
</section></section><section class="section2" id="to-summarize"><h2>To summarize&hellip;<a class="headerlink" href="#to-summarize" title="Permanent link"></a></h2>
<p><strong>When building with Legos:</strong></p>
<ol>
<li>Your brother makes a request that you build a spaceship.</li>
<li>You receive the request.</li>
<li>You retrieve and organize all the Legos you need to construct the spaceship.</li>
<li>You use the Legos to build the spaceship and present the finished spaceship back to your brother.</li>
</ol>
<figure class="js-lightbox"><a href="https://files.realpython.com/media/building-legos-like-mvc-web-application.caf15452d37d.png" target="_blank"><img loading="lazy" class="img-fluid mx-auto d-block " src="https://files.realpython.com/media/building-legos-like-mvc-web-application.caf15452d37d.png" width="1000" height="509" srcset="https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/building-legos-like-mvc-web-application.caf15452d37d.png&amp;w=250&amp;sig=1871a054610765f0db031d3fa64b5519b8ca929b 250w, https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/building-legos-like-mvc-web-application.caf15452d37d.png&amp;w=500&amp;sig=66f314359504727098ef3acd94ac1ea80972d49d 500w, https://files.realpython.com/media/building-legos-like-mvc-web-application.caf15452d37d.png 1000w" sizes="75vw" alt="Building legos-like MVC web application" data-asset="28" /></a></figure>
<p><strong>And in a web app:</strong></p>
<ol>
<li>A user requests to view a page by entering a URL.</li>
<li>The <strong>Controller</strong> receives that request.</li>
<li>It uses the <strong>Models</strong> to retrieve all of the necessary data, organizes it, and sends it off to the&hellip;</li>
<li><strong>View</strong>, which then uses that data to render the final webpage presented to the the user in their browser.</li>
</ol>
<figure class="js-lightbox"><a href="https://files.realpython.com/media/mvc_diagram_with_routes.e12c5b982ac8.png" target="_blank"><img loading="lazy" class="img-fluid mx-auto d-block " src="https://files.realpython.com/media/mvc_diagram_with_routes.e12c5b982ac8.png" width="1998" height="1274" srcset="https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/mvc_diagram_with_routes.e12c5b982ac8.png&amp;w=499&amp;sig=6204f095c09f8403cdd54d771ea924a49a193c2a 499w, https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/mvc_diagram_with_routes.e12c5b982ac8.png&amp;w=999&amp;sig=92a7e18109cb47bc2a4e5119b522615e0a84b2d5 999w, https://files.realpython.com/media/mvc_diagram_with_routes.e12c5b982ac8.png 1998w" sizes="75vw" alt="MVC diagram with routes" data-asset="29" /></a></figure>
<div><div class="rounded border border-light" style="display:block;position:relative;"><div style="display:block;width:100%;padding-top:12.5%;"></div><div class="rpad rounded border" data-unit="8x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;"></div></div><a class="small text-muted" href="/account/join/" rel="nofollow"><i aria-hidden="true" class="fa fa-info-circle"> </i> Remove ads</a></div></section><section class="section2" id="from-a-more-technical-standpoint"><h2>From a more technical standpoint<a class="headerlink" href="#from-a-more-technical-standpoint" title="Permanent link"></a></h2>
<p>With the MVC functionality summarized, let&rsquo;s dive a bit deeper and see how everything functions on a more technical level.</p>
<p>When you type in a URL in your browser to access a web application, you&rsquo;re making a request to view a certain page within the application. But how does the application know which page to display/render?</p>
<p>When building a web app, you define what are known as <strong>routes</strong>. Routes are, essentially, URL patterns associated with different pages. So when someone enters a URL, behind the scenes, the application tries to match that URL to one of these predefined routes.</p>
<p>So, in fact, there are really <em>four</em> major components in play: <strong>routes</strong>, <strong>models</strong>, <strong>views</strong>, and <strong>controllers</strong>.</p>
<section class="section3" id="routes"><h3>Routes<a class="headerlink" href="#routes" title="Permanent link"></a></h3>
<p>Each route is associated with a controller - more specifically, a certain function <em>within</em> a controller, known as a <strong>controller action</strong>. So when you enter a URL, the application attempts to find a matching route, and, if it&rsquo;s successful, it calls that route&rsquo;s associated controller action.</p>
<p>Let&rsquo;s look at a basic <a href="https://realpython.com/python-web-applications-with-flask-part-i/">Flask</a> route as an example:</p>
<div class="highlight python"><pre><span></span><code><span class="nd">@app</span><span class="o">.</span><span class="n">route</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">main_page</span><span class="p">():</span>
    <span class="k">pass</span>
</code></pre></div>
<p>Here we establish the <code>/</code> route associated with the <code>main_page()</code> view function.</p>
</section><section class="section3" id="models-and-controllers"><h3>Models and Controllers<a class="headerlink" href="#models-and-controllers" title="Permanent link"></a></h3>
<p>Within the controller action, two main things typically occur: the models are used to retrieve all of the necessary data from a database; and that data is passed to a view, which renders the requested page. The data retrieved via the models is generally added to a data structure (like a list or dictionary), and that structure is what&rsquo;s sent to the view.</p>
<p>Back to our Flask example:</p>
<div class="highlight python"><pre><span></span><code><span class="nd">@app</span><span class="o">.</span><span class="n">route</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">main_page</span><span class="p">():</span>
    <span class="sd">&quot;&quot;&quot;Searches the database for entries, then displays them.&quot;&quot;&quot;</span>
    <span class="n">db</span> <span class="o">=</span> <span class="n">get_db</span><span class="p">()</span>
    <span class="n">cur</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="s1">&#39;select * from entries order by id desc&#39;</span><span class="p">)</span>
    <span class="n">entries</span> <span class="o">=</span> <span class="n">cur</span><span class="o">.</span><span class="n">fetchall</span><span class="p">()</span>
    <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="s1">&#39;index.html&#39;</span><span class="p">,</span> <span class="n">entries</span><span class="o">=</span><span class="n">entries</span><span class="p">)</span>
</code></pre></div>
<p>Now within the view function, we grab data from the database and perform some basic logic. This returns a list, which we assign to the variable <code>entries</code>, that is accessible within the <em>index.html</em> template.</p>
</section><section class="section3" id="views"><h3>Views<a class="headerlink" href="#views" title="Permanent link"></a></h3>
<p>Finally, in the view, that structure of data is accessed and the information contained within is used to render the HTML content of the page the user ultimately sees in their browser.</p>
<p>Again, back to our Flask app, we can loop through the <code>entries</code>, displaying each one using the Jinja syntax:</p>
<div class="highlight html"><pre><span></span><code>{% for entry in entries %}
  <span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">h2</span><span class="p">&gt;</span>{{ entry.title }}<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>{{ entry.text|safe }}<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
{% else %}
  <span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;&lt;</span><span class="nt">em</span><span class="p">&gt;</span>No entries yet. Add some!<span class="p">&lt;/</span><span class="nt">em</span><span class="p">&gt;&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
{% endfor %}
</code></pre></div>
</section><section class="section3" id="summary"><h3>Summary<a class="headerlink" href="#summary" title="Permanent link"></a></h3>
<p>So a more detailed, technical summary of the MVC request process is as follows:</p>
<ol>
<li>A user requests to view a page by entering a URL.</li>
<li>The application matches the URL to a predefined <strong>route</strong>.</li>
<li>The <strong>controller action</strong> associated with the route is called.</li>
<li>The controller action uses the <strong>models</strong> to retrieve all of the necessary data from a database, places the data in an array, and loads a <strong>view</strong>, passing along the data structure.</li>
<li>The <strong>view</strong> accesses the structure of data and uses it to render the requested page, which is then presented to the user in their browser.</li>
</ol>
<p><em>This is a guest post by Alex Coleman, a coding instructor and consulting web developer.</em></p>
</section></section>
<div class="text-center my-3">
<div class="jsCompletionStatusWidget btn-group mb-0">
<button title="Click to mark as completed" class="jsBtnCompletion btn btn-secondary border-right " style="border-top-right-radius: 0; border-bottom-right-radius: 0;" disabled>Mark as Completed</button>
<button title="Add bookmark" class="jsBtnBookmark btn btn-secondary border-left" disabled><i class="fa fa-fw fa-bookmark-o"></i></button>
</div>
</div>
</div>
<div class="card mt-4 mb-4 bg-secondary">
<p class="card-header h3 text-center bg-light">🐍 Python Tricks 💌</p>
<div class="card-body">
<div class="container">
<div class="row">
<div class="col-xs-12 col-sm-7">
<p>Get a short &amp; sweet <strong>Python Trick</strong> delivered to your inbox every couple of days. No spam ever. Unsubscribe any time. Curated by the Real Python team.</p>
</div>
<div class="col-xs-12 col-sm-5">
<img class="img-fluid rounded mb-3" src="https://cdn.realpython.com/static/pytrick-dict-merge.4201a0125a5e.png" width="738" height="490" alt="Python Tricks Dictionary Merge">
</div>
</div>
<div class="row mb-3">
<form class="col-12" action="/optins/process/" method="post">
<input type="hidden" name="csrfmiddlewaretoken" value="tQS7l8zBM7yjN2RFAz5W6UyKkusdsJuSzVxkWHLz7CttXVwnJlx6wZxGApx7FhYH">
<input type="hidden" name="slug" value="static-python-tricks-footer">
<div class="form-group">
<input name="email" type="email" class="form-control form-control-lg" placeholder="Email Address" required>
</div>
<button name="submit" type="submit" class="btn btn-primary btn-lg btn-block">Send Me Python Tricks »</button>
</form>
</div>
</div>
</div>
</div>
<div class="bg-light rounded py-4 my-4 shadow shadow-sm mx-n2">
<div class="col-12 text-center d-block d-md-none">
<p class="h2 mb-3">Master <u><span class="marker-highlight">Real-World Python Skills</mark></u> With Unlimited Access to Real&nbsp;Python</p>
<p class="mb-1"><img class="w-75" src="https://cdn.realpython.com/static/videos/lesson-locked.f5105cfd26db.svg" width="510" height="260"></p>
<p class="mx-auto w-75 mb-3 small"><strong>Join us and get access to hundreds of tutorials, hands-on video courses, and a community of expert&nbsp;Pythonistas:</strong></p>
<p class="mb-0"><a href="/account/join/?utm_source=rp_article_footer&utm_content=the-model-view-controller-mvc-paradigm-summarized-with-legos" class="btn btn-primary btn-sm px-4 mb-0">Level Up Your Python Skills »</a>
</div>
<div class="col-12 text-center d-none d-md-block">
<p class="h2 mb-2">Master <u><span class="marker-highlight">Real-World Python Skills</span></u><br>With Unlimited Access to Real&nbsp;Python</p>
<p class="mb-2"><img class="w-50 mb-2" src="https://cdn.realpython.com/static/videos/lesson-locked.f5105cfd26db.svg" width="510" height="260"></p>
<p class="mx-auto w-50 mb-3"><strong>Join us and get access to hundreds of tutorials, hands-on video courses, and a community of expert Pythonistas:</strong></p>
<p><a href="/account/join/?utm_source=rp_article_footer&utm_content=the-model-view-controller-mvc-paradigm-summarized-with-legos" class="btn btn-primary btn-lg px-4">Level Up Your Python Skills »</a>
</div>
</div>
<div class="card mt-4" id="reader-comments">
<p class="card-header h3">What Do You Think?</p>
<div class="text-center mt-3 mb-0 p-0">
<span>
<a target="_blank" rel="nofollow" href="https://twitter.com/intent/tweet/?text=Check out this %23Python tutorial: Model-View-Controller%20%28MVC%29%20Explained%20%E2%80%93%20With%20Legos by @realpython&url=https%3A//realpython.com/the-model-view-controller-mvc-paradigm-summarized-with-legos/" class="mr-1 badge badge-twitter text-light mb-1"><i class="mr-1 fa fa-twitter text-light"></i>Tweet</a>
<a target="_blank" rel="nofollow" href="https://facebook.com/sharer/sharer.php?u=https%3A//realpython.com/the-model-view-controller-mvc-paradigm-summarized-with-legos/" class="mr-1 badge badge-facebook text-light mb-1"><i class="mr-1 fa fa-facebook text-light"></i>Share</a>
<a target="_blank" rel="nofollow" href="mailto:?subject=Python article for you&body=Check out this Python tutorial:%0A%0AModel-View-Controller%20%28MVC%29%20Explained%20%E2%80%93%20With%20Legos%0A%0Ahttps%3A//realpython.com/the-model-view-controller-mvc-paradigm-summarized-with-legos/" class="badge badge-red text-light mb-1"><i class="mr-1 fa fa-envelope text-light"></i>Email</a>
</span>
</div>
<div class="card-body">
<div class="alert alert-dark">
<p class="mb-0"><strong>Real Python Comment Policy:</strong> The most useful comments are those written with the goal of learning from or helping out other readers—after reading the whole article and all the earlier comments. Complaints and insults generally won’t make the cut here.</p>
</div>
<p>What’s your #1 takeaway or favorite thing you learned? How are you going to put your newfound skills to use? Leave a comment below and let us know.</p>
<div class="mb-4" id="disqus_thread">
</div>
</div>
</div>
<div class="card mt-4 mb-4">
<p class="card-header h3">Keep Learning</p>
<div class="card-body">
<p class="mb-0">Related Tutorial Categories:
<a href="/tutorials/intermediate/" class="badge badge-light text-muted">intermediate</a>
<a href="/tutorials/web-dev/" class="badge badge-light text-muted">web-dev</a>
</p>
</div>
</div>
<div class="modal fade" tabindex="-1" role="dialog" id="rprw">
<div class="modal-dialog modal-lg modal-dialog-centered" role="document">
<div class="modal-content">
<div class="modal-header border-0 mt-3">
<div class="col-12 modal-title text-center">
<h2 class="my-0 mx-5">Keep reading Real&nbsp;Python by creating a free account or signing&nbsp;in:</h2>
</div>
</div>
<div class="modal-body bg-light">
<div class="col-12 text-center">
<p class="mb-2 mt-3"><a href="/account/signup/?intent=continue_reading&utm_source=rp&utm_medium=web&utm_campaign=rwn&utm_content=v1&next=%2Fthe-model-view-controller-mvc-paradigm-summarized-with-legos%2F"><img class="w-50 mb-2" src="https://cdn.realpython.com/static/videos/lesson-locked.f5105cfd26db.svg" width="510" height="260" alt="Keep reading"></a></p>
<p><a href="/account/signup/?intent=continue_reading&utm_source=rp&utm_medium=web&utm_campaign=rwn&utm_content=v1&next=%2Fthe-model-view-controller-mvc-paradigm-summarized-with-legos%2F" class="btn btn-primary btn-lg px-5"></i>Continue »</a></a>
</div>
</div>
<div class="modal-footer border-0">
<p class="text-center text-muted mt-2 mb-1">Already have an account? <a href="/account/login/?next=/the-model-view-controller-mvc-paradigm-summarized-with-legos/">Sign-In</a></p>
</div>
</div>
</div>
</div>
<script src="https://cdn.realpython.com/static/frontend/reader/rw.38bf29157dfe.js" async></script>
</div>
<aside class="col-md-7 col-lg-4">
<div class="card mb-3 bg-secondary">
<form class="card-body" action="/optins/process/" method="post">
<div class="form-group">
<p class="h5 text-muted text-center">— FREE Email Series —</p>
<p class="h3 text-center">🐍 Python Tricks 💌</p>
<p><img class="img-fluid rounded" src="https://cdn.realpython.com/static/pytrick-dict-merge.4201a0125a5e.png" width="738" height="490" alt="Python Tricks Dictionary Merge"></p>
</div>
<div class="form-group">
<input type="hidden" name="csrfmiddlewaretoken" value="tQS7l8zBM7yjN2RFAz5W6UyKkusdsJuSzVxkWHLz7CttXVwnJlx6wZxGApx7FhYH">
<input type="hidden" name="slug" value="static-python-tricks-sidebar">
<input type="email" class="form-control form-control-md" name="email" placeholder="Email&hellip;" required>
</div>
<button type="submit" name="submit" class="btn btn-primary btn-md btn-block">Get Python Tricks »</button>
<p class="mb-0 mt-2 text-muted text-center">🔒 No spam. Unsubscribe any time.</p>
</form>
</div>
<div class="sidebar-module sidebar-module-inset border">
<p class="h4"><a class="link-unstyled" href="/tutorials/all/">All Tutorial Topics</a></p>
<a href="/tutorials/advanced/" class="badge badge-light text-muted">advanced</a>
<a href="/tutorials/api/" class="badge badge-light text-muted">api</a>
<a href="/tutorials/basics/" class="badge badge-light text-muted">basics</a>
<a href="/tutorials/best-practices/" class="badge badge-light text-muted">best-practices</a>
<a href="/tutorials/community/" class="badge badge-light text-muted">community</a>
<a href="/tutorials/databases/" class="badge badge-light text-muted">databases</a>
<a href="/tutorials/data-science/" class="badge badge-light text-muted">data-science</a>
<a href="/tutorials/devops/" class="badge badge-light text-muted">devops</a>
<a href="/tutorials/django/" class="badge badge-light text-muted">django</a>
<a href="/tutorials/docker/" class="badge badge-light text-muted">docker</a>
<a href="/tutorials/flask/" class="badge badge-light text-muted">flask</a>
<a href="/tutorials/front-end/" class="badge badge-light text-muted">front-end</a>
<a href="/tutorials/gamedev/" class="badge badge-light text-muted">gamedev</a>
<a href="/tutorials/gui/" class="badge badge-light text-muted">gui</a>
<a href="/tutorials/intermediate/" class="badge badge-light text-muted">intermediate</a>
<a href="/tutorials/machine-learning/" class="badge badge-light text-muted">machine-learning</a>
<a href="/tutorials/projects/" class="badge badge-light text-muted">projects</a>
<a href="/tutorials/python/" class="badge badge-light text-muted">python</a>
<a href="/tutorials/testing/" class="badge badge-light text-muted">testing</a>
<a href="/tutorials/tools/" class="badge badge-light text-muted">tools</a>
<a href="/tutorials/web-dev/" class="badge badge-light text-muted">web-dev</a>
<a href="/tutorials/web-scraping/" class="badge badge-light text-muted">web-scraping</a>
</div>
<div class="sidebar-module sidebar-module-inset p-0" style="overflow:hidden;">
<div style="display:block;position:relative;">
<div style="display:block;width:100%;padding-top:100%;"></div>
<div class="rpad" data-unit="1x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;"></div>
</div>
</div>
<div class="sidebar-sticky ">
<div class="bg-light sidebar-module sidebar-module-inset" id="sidebar-toc">
<p class="h4 text-muted"><a class="link-unstyled" href="#toc">Table of Contents</a></p>
<div class="toc">
<ul>
<li><a href="#legos">Legos!</a><ul>
<li><a href="#it-all-starts-with-a-request">It all starts with a request&hellip;</a></li>
<li><a href="#the-request-reaches-the-controller">The request reaches the controller&hellip;</a></li>
<li><a href="#those-building-blocks-are-known-as-models">Those building blocks are known as models&hellip;</a></li>
<li><a href="#so-the-request-comes-in">So the request comes in&hellip;</a></li>
<li><a href="#the-final-product-is-known-as-the-view">The final product is known as the view&hellip;</a></li>
</ul>
</li>
<li><a href="#to-summarize">To summarize&hellip;</a></li>
<li><a href="#from-a-more-technical-standpoint">From a more technical standpoint</a><ul>
<li><a href="#routes">Routes</a></li>
<li><a href="#models-and-controllers">Models and Controllers</a></li>
<li><a href="#views">Views</a></li>
<li><a href="#summary">Summary</a></li>
</ul>
</li>
</ul>
</div>
</div>
<div class="sidebar-module sidebar-module-inset text-center my-3 py-0">
<div class="jsCompletionStatusWidget btn-group mb-0">
<button title="Click to mark as completed" class="jsBtnCompletion btn btn-secondary border-right " style="border-top-right-radius: 0; border-bottom-right-radius: 0;" disabled>Mark as Completed</button>
<button title="Add bookmark" class="jsBtnBookmark btn btn-secondary border-left" disabled><i class="fa fa-fw fa-bookmark-o"></i></button>
</div>
</div>
<div class="sidebar-module sidebar-module-inset text-center my-3 py-0">
<span>
<a target="_blank" rel="nofollow" href="https://twitter.com/intent/tweet/?text=Check out this %23Python tutorial: Model-View-Controller%20%28MVC%29%20Explained%20%E2%80%93%20With%20Legos by @realpython&url=https%3A//realpython.com/the-model-view-controller-mvc-paradigm-summarized-with-legos/" class="mr-1 badge badge-twitter text-light mb-1"><i class="mr-1 fa fa-twitter text-light"></i>Tweet</a>
<a target="_blank" rel="nofollow" href="https://facebook.com/sharer/sharer.php?u=https%3A//realpython.com/the-model-view-controller-mvc-paradigm-summarized-with-legos/" class="mr-1 badge badge-facebook text-light mb-1"><i class="mr-1 fa fa-facebook text-light"></i>Share</a>
<a target="_blank" rel="nofollow" href="mailto:?subject=Python article for you&body=Check out this Python tutorial:%0A%0AModel-View-Controller%20%28MVC%29%20Explained%20%E2%80%93%20With%20Legos%0A%0Ahttps%3A//realpython.com/the-model-view-controller-mvc-paradigm-summarized-with-legos/" class="badge badge-red text-light mb-1"><i class="mr-1 fa fa-envelope text-light"></i>Email</a>
</span>
</div>
<div class="sidebar-module sidebar-module-inset p-0" style="overflow:hidden;">
<div style="display:block;position:relative;">
<div style="display:block;width:100%;padding-top:25%;"></div>
<div class="rpad" data-unit="4x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;"></div>
</div>
</div>
</div>
</aside>
</div>
</div>
<div class="modal fade" id="modal-python-oop" tabindex="-1" role="dialog" aria-hidden="true">
<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
<div class="modal-content">
<div class="modal-header bg-light pt-3 pb-2">
<div class="container-fluid">
<div class="row">
<div class="col-12">
<div class="progress" style="height: .5rem;">
<div class="progress-bar progress-bar-striped progress-bar-animated w-50" role="progressbar"></div>
</div>
</div>
<div class="col-12">
<p class="text-muted text-center mb-0 mt-2">Almost there! Complete this form and click the button below to gain instant access:</p>
</div>
</div>
</div>
<button type="button" class="close" data-dismiss="modal" aria-label="Close">
<span aria-hidden="true">&times;</span>
</button>
</div>
<div class="modal-body m-4">
<div class="container-fluid">
<div class="row align-items-center">
<div class="col-12 col-lg-4 mb-4">
<img class="img-fluid rounded" src="https://files.realpython.com/media/python-oop-cheatsheet.35e154c59789.jpg" width="400" height="284" srcset="https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/python-oop-cheatsheet.35e154c59789.jpg&amp;w=100&amp;sig=9e5963f4853a60a6432c88c11e1dadb5cc96c626 100w, https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/python-oop-cheatsheet.35e154c59789.jpg&amp;w=200&amp;sig=be991afd34fd94f16a94a245409dd9d670639ecd 200w, https://files.realpython.com/media/python-oop-cheatsheet.35e154c59789.jpg 400w" sizes="50vw" alt="Python OOP Cheat Sheet">
</div>
<div class="col">
<p class="text-center h3 mb-4">Object-Oriented Programming in Python: The 7 Best Resources (A Free PDF Cheat Sheet)</p>
<form class="col-12" action="/optins/process/" method="post">
<input type="hidden" name="csrfmiddlewaretoken" value="tQS7l8zBM7yjN2RFAz5W6UyKkusdsJuSzVxkWHLz7CttXVwnJlx6wZxGApx7FhYH">
<input type="hidden" name="slug" value="python-oop">
<div class="form-group">
<input type="email" name="email" class="form-control" placeholder="Email Address" required autofocus>
</div>
<button name="submit" type="submit" class="btn btn-primary btn-block text-wrap">Send My Free Cheat Sheet »</button>
</form>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<footer class="footer">
<div class="container">
<div class="w-75 mx-auto mt-4 mb-0">
<div style="display:block;position:relative;">
<div style="display:block;width:100%;padding-top:12.5%;"></div>
<div class="rpad rounded border" data-unit="8x1" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;"></div>
</div>
<a class="small text-muted" href="/account/join/" rel="nofollow"> <i class="fa fa-info-circle" aria-hidden="true"> </i> Remove ads</a>
</div>
<p class="text-center text-muted w-75 mx-auto">© 2012–2021 Real Python&nbsp;⋅ <a href="/newsletter/">Newsletter</a>&nbsp;⋅ <a href="/podcasts/rpp/">Podcast</a>&nbsp;⋅ <a href="https://www.youtube.com/realpython">YouTube</a>&nbsp;⋅ <a href="https://twitter.com/realpython">Twitter</a>&nbsp;⋅ <a href="https://facebook.com/LearnRealPython">Facebook</a>&nbsp;⋅ <a href="https://www.instagram.com/realpython/">Instagram</a>&nbsp;⋅ <a href="/">Python&nbsp;Tutorials</a>&nbsp;⋅ <a href="/search">Search</a>&nbsp;⋅ <a href="/privacy-policy/">Privacy Policy</a>&nbsp;⋅ <a href="/energy-policy/" class="text-success active">Energy Policy</a>&nbsp;⋅ <a href="/sponsorships/">Advertise</a>&nbsp;⋅ <a href="/contact/">Contact</a><br>❤️ Happy Pythoning!</p>
</div>
</footer>
<script>
      (function(document, history, location) {
        var HISTORY_SUPPORT = !!(history && history.pushState);

        var anchorScrolls = {
          ANCHOR_REGEX: /^#[^ ]+$/,
          OFFSET_HEIGHT_PX: 120,

          /**
           * Establish events, and fix initial scroll position if a hash is provided.
           */
          init: function() {
            this.scrollToCurrent();
            window.addEventListener('hashchange', this.scrollToCurrent.bind(this));
            document.body.addEventListener('click', this.delegateAnchors.bind(this));
          },

          /**
           * Return the offset amount to deduct from the normal scroll position.
           * Modify as appropriate to allow for dynamic calculations
           */
          getFixedOffset: function() {
            return this.OFFSET_HEIGHT_PX;
          },

          /**
           * If the provided href is an anchor which resolves to an element on the
           * page, scroll to it.
           * @param  {String} href
           * @return {Boolean} - Was the href an anchor.
           */
          scrollIfAnchor: function(href, pushToHistory) {
            var match, rect, anchorOffset;

            if(!this.ANCHOR_REGEX.test(href)) {
              return false;
            }

            match = document.getElementById(href.slice(1));

            if(match) {
              rect = match.getBoundingClientRect();
              anchorOffset = window.pageYOffset + rect.top - this.getFixedOffset();
              window.scrollTo(window.pageXOffset, anchorOffset);

              // Add the state to history as-per normal anchor links
              if(HISTORY_SUPPORT && pushToHistory) {
                history.pushState({}, document.title, location.pathname + href);
              }
            }

            return !!match;
          },

          /**
           * Attempt to scroll to the current location's hash.
           */
          scrollToCurrent: function() {
            this.scrollIfAnchor(window.location.hash);
          },

          /**
           * If the click event's target was an anchor, fix the scroll position.
           */
          delegateAnchors: function(e) {
            var elem = e.target;

            if(
              elem.nodeName === 'A' &&
              this.scrollIfAnchor(elem.getAttribute('href'), true)
            ) {
              e.preventDefault();
            }
          }
        };

        window.addEventListener(
          'DOMContentLoaded', anchorScrolls.init.bind(anchorScrolls)
        );
      })(window.document, window.history, window.location);
    </script>
<script src="https://cdn.realpython.com/static/jquery.min.8fb8fee4fcc3.js"></script>
<script src="https://cdn.realpython.com/static/popper.min.1022eaf388cc.js"></script>
<script src="https://cdn.realpython.com/static/bootstrap.min.f0c2bcf5ef0c.js"></script>
<script>
    (function() {
      document.querySelectorAll(".js-search-form-submit").forEach(function(el) {
        el.addEventListener("click", function(e) {
          e.preventDefault();
          e.currentTarget.parentElement.submit();
        })
      });
    })();
    </script>
<script src="https://cdn.realpython.com/static/frontend/reader/repl-toggle.de6c7bf44788.js" async></script>
<script src="https://cdn.realpython.com/static/frontend/reader/lightbox.49cdac39212e.js" async></script>
<script>window.rp_prop_id = '58946116052';</script>
<script src="https://srv.realpython.net/tag.js" async></script>
<script src="https://cdn.realpython.com/static/frontend/reader/toc-refresh.76a102c7d921.js" async></script>
<script id="js-context" type="application/json">{"is_completed": false, "is_bookmarked": false, "api_article_bookmark_url": "/api/v1/articles/the-model-view-controller-mvc-paradigm-summarized-with-legos/bookmark/", "api_article_completion_status_url": "/api/v1/articles/the-model-view-controller-mvc-paradigm-summarized-with-legos/completion_status/"}</script>
<script src="https://cdn.realpython.com/static/frontend/reader/completion-status.352d07abd84a.js" async></script>
<script id="dsq-count-scr" src="https://realpython.disqus.com/count.js" async></script>
<script>
      var disqus_config = function () {
        this.page.url = 'https://realpython.com/the-model-view-controller-mvc-paradigm-summarized-with-legos/';
        this.page.identifier = 'https://realpython.com/the-model-view-controller-mvc-paradigm-summarized-with-legos/';
        this.callbacks.onReady = [function() {
          if (window.onDisqusReady) {
            window.onDisqusReady();
          }
        }];
      };
      var disqus_script_url = 'https://realpython.disqus.com/embed.js';
    </script>
<script src="https://cdn.realpython.com/static/frontend/reader/lazy-disqus.07ee9079f4a3.js" defer></script>
<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Article",
    "headline": "Model\u002DView\u002DController (MVC) Explained – With Legos",
    
    "image": {
      "@type": "ImageObject",
      "url": "https://files.realpython.com/media/legos.5a64247f25d8.png",
      "width": 1000,
      "height": 417
    },
    
    "mainEntityOfPage": {
      "@type": "WebPage",
      "@id": "https://realpython.com/the-model-view-controller-mvc-paradigm-summarized-with-legos/"
    },
    "datePublished": "2014-12-20T16:25:15+00:00",
    "dateModified": "2019-03-15T15:25:38.162866+00:00",
     "publisher": {
      "@type": "Organization",
      "name": "Real Python",
      "logo": {
        "@type": "ImageObject",
        "url": "https://cdn.realpython.com/static/real-python-logo-square-tiny.b2452b6d3823.png",
        "width": 60,
        "height": 60
      }
    },
    "author": {
      "@type": "Organization",
      "name": "Real Python",
      "url": "https://realpython.com",
      "logo": "https://cdn.realpython.com/static/real-python-logo-square.146e987bf77c.png"
    },
    "description": "This article details the Model\u002DView\u002DController (MVC) design pattern with Legos!"
  }
  </script>
<script>
  var _dcq = _dcq || [];
  var _dcs = _dcs || {};
  _dcs.account = '6214500';

  (function() {
    var dc = document.createElement('script');
    dc.type = 'text/javascript'; dc.async = true;
    dc.src = '//tag.getdrip.com/6214500.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(dc, s);
  })();
</script>
<script type="text/javascript">(function(){window['__CF$cv$params']={r:'694a476619b159d1',m:'zfm78oElNlRIh1ynF0g6A2Zz6Grhhztv.CfWk6WFgdQ-1632636099-0-ARVZ3rSBIx/DTBWwZulOUwKFhzD3Fq2JarlOsQyLuThheVSzYstvO8ISzWBP68MC8v4Ck6O3wbg5/J1zc8343VcciYIL22r1V7uh90nKEX2ukPgKXoUBmHo6keTKhmi94hEbz1yQymKrSjBENEIqOuD3opznB1NbnYLS2vKDBMFq/HZugrS2wgCMZivZ4RzBrw==',s:[0x5891b9fe51,0x085c490a8f],}})();</script></body>
</html>
