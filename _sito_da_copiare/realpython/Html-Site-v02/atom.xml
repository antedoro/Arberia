<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Real Python</title>
  <link href="https://realpython.com/atom.xml" rel="self"/>
  <link href="https://realpython.com/"/>
  <updated>2021-09-24T12:00:00+00:00</updated>
  <id>https://realpython.com/</id>
  <author>
    <name>Real Python</name>
  </author>

  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #79: Measuring Your Python Learning Progress</title>
      <id>https://realpython.com/podcasts/rpp/79/</id>
      <link href="https://realpython.com/podcasts/rpp/79/"/>
      <updated>2021-09-24T12:00:00+00:00</updated>
      <summary>Where are you along the path of learning Python? Do you feel like you&#x27;re making progress? What are ways you can put the learning path into a more precise focus? This week on the show, we talk with previous guest Martin Breuss about his recent article &quot;How Long Does It Take to Learn Python?&quot;</summary>
      <content type="html">
        &lt;p&gt;Where are you along the path of learning Python? Do you feel like you&#x27;re making progress? What are ways you can put the learning path into a more precise focus? This week on the show, we talk with previous guest Martin Breuss about his recent article &quot;How Long Does It Take to Learn Python?&quot;&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Django Template Language: Tags and Filters</title>
      <id>https://realpython.com/django-templates-tags-filters/</id>
      <link href="https://realpython.com/django-templates-tags-filters/"/>
      <updated>2021-09-22T14:00:00+00:00</updated>
      <summary>Django templates use their own mini-language that&#x27;s inspired by Python. This tutorial covers Django template tags and filters, explaining how to compile and use templates. It covers conditional blocks, looping, and inheritance in tags as well as filters for strings and filters for lists.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;&lt;a href=&quot;https://www.djangoproject.com/&quot;&gt;Django&lt;/a&gt; is a powerful framework for creating web applications in Python. Its features include &lt;a href=&quot;https://docs.djangoproject.com/en/3.2/topics/db/models/&quot;&gt;database models&lt;/a&gt;, &lt;a href=&quot;https://docs.djangoproject.com/en/3.2/topics/http/urls/&quot;&gt;routing URLs&lt;/a&gt;, &lt;a href=&quot;https://realpython.com/django-view-authorization/&quot;&gt;authentication&lt;/a&gt;, &lt;a href=&quot;https://realpython.com/django-user-management/&quot;&gt;user management&lt;/a&gt;, &lt;a href=&quot;https://realpython.com/customize-django-admin-python/&quot;&gt;administrative tools&lt;/a&gt;, and a template language. You can compose reusable HTML that changes based on the data you pass to the template language. Django templates use tags and filters to define a mini-language that‚Äôs similar to Python‚Äîbut isn‚Äôt Python.&lt;/p&gt;
&lt;p&gt;You‚Äôll get to know Django templates through the tags and filters you use to compose reusable HTML.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this tutorial, you‚Äôll learn how to:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write, compile, and render a &lt;strong&gt;Django template&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Use the &lt;strong&gt;&lt;code&gt;render()&lt;/code&gt; shortcut&lt;/strong&gt; in views to quickly use templates&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;template tags&lt;/strong&gt; for conditionals and loops in your templates&lt;/li&gt;
&lt;li&gt;Create &lt;strong&gt;reusable templates&lt;/strong&gt; with inheritance and inclusion&lt;/li&gt;
&lt;li&gt;Modify the presentation of your data through &lt;strong&gt;template filters&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;&lt;p&gt;&lt;strong&gt;Free Bonus:&lt;/strong&gt; &lt;a href=&quot;#&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-django-resources-learing-guide&quot; data-focus=&quot;false&quot;&gt;Click here to get access to a free Django Learning Resources Guide (PDF)&lt;/a&gt; that shows you tips and tricks as well as common pitfalls to avoid when building Python + Django web applications.&lt;/p&gt;&lt;/div&gt;

&lt;h2 id=&quot;creating-a-django-project&quot;&gt;Creating a Django Project&lt;a class=&quot;headerlink&quot; href=&quot;#creating-a-django-project&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To experiment with Django templates, you‚Äôre going to need a project so that you can play around with the code. You‚Äôll be building MoviePalace: the world‚Äôs smallest, simplest movie website. For a more detailed example of starting a new project, you can read &lt;a href=&quot;https://realpython.com/get-started-with-django-1/&quot;&gt;Get Started With Django Part 1: Build a Portfolio App&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Django isn‚Äôt part of the standard Python library, so you‚Äôll first need to install it. When dealing with third-party libraries, you should use a virtual environment. For a refresher on virtual environments, you can read over &lt;a href=&quot;https://realpython.com/python-virtual-environments-a-primer/&quot;&gt;Python Virtual Environments: A Primer&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Once you have a virtual environment, run the following commands to get going:&lt;/p&gt;
&lt;div class=&quot;highlight sh&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;linenos&quot;&gt; 1&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python -m pip install &lt;span class=&quot;nv&quot;&gt;django&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;.2.5
&lt;span class=&quot;linenos&quot;&gt; 2&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;django-admin startproject MoviePalace
&lt;span class=&quot;linenos&quot;&gt; 3&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; MoviePalace
&lt;span class=&quot;linenos&quot;&gt; 4&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python manage.py startapp core
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Line 1 installs Django into your virtual environment using &lt;a href=&quot;https://realpython.com/what-is-pip/&quot;&gt;&lt;code&gt;pip&lt;/code&gt;&lt;/a&gt;. On line 2, the &lt;code&gt;django-admin&lt;/code&gt; command creates a new Django project called &lt;code&gt;MoviePalace&lt;/code&gt;. A Django project consists of apps, where your code lives. The fourth command creates an app named &lt;code&gt;core&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You‚Äôre almost ready to go. The last step is to tell Django about your newly created &lt;code&gt;core&lt;/code&gt; app. You do this by editing the &lt;code&gt;MoviePalace/settings.py&lt;/code&gt; file and adding &lt;code&gt;&quot;core&quot;&lt;/code&gt; to the list of &lt;code&gt;INSTALLED_APPS&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight python&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;linenos&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt;34&lt;/span&gt;    &lt;span class=&quot;s2&quot;&gt;&quot;django.contrib.admin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt;35&lt;/span&gt;    &lt;span class=&quot;s2&quot;&gt;&quot;django.contrib.auth&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt;36&lt;/span&gt;    &lt;span class=&quot;s2&quot;&gt;&quot;django.contrib.contenttypes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt;37&lt;/span&gt;    &lt;span class=&quot;s2&quot;&gt;&quot;django.contrib.sessions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt;38&lt;/span&gt;    &lt;span class=&quot;s2&quot;&gt;&quot;django.contrib.messages&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt;39&lt;/span&gt;    &lt;span class=&quot;s2&quot;&gt;&quot;django.contrib.staticfiles&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;hll&quot;&gt;    &lt;span class=&quot;s2&quot;&gt;&quot;core&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;linenos&quot;&gt;41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With &lt;code&gt;core&lt;/code&gt; registered as an app, you can now write a view containing a template.&lt;/p&gt;
&lt;h2 id=&quot;getting-ready-to-use-django-templates&quot;&gt;Getting Ready to Use Django Templates&lt;a class=&quot;headerlink&quot; href=&quot;#getting-ready-to-use-django-templates&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Django was created at a &lt;a href=&quot;https://en.wikipedia.org/wiki/Lawrence_Journal-World&quot;&gt;newspaper&lt;/a&gt; to help build web applications quickly. One of the goals of the framework was to separate the concerns of the business logic from the presentation logic.&lt;/p&gt;
&lt;p&gt;Web designers, rather than Python programmers, frequently did the HTML development at the paper. Because of this, the developers decided not to allow the execution of Python within the template language. This decision simplified what the designers needed to know and sandboxed their code for security reasons. The end result was a separate mini-language. This approach is in contrast to the &lt;a href=&quot;https://en.wikipedia.org/wiki/PHP#Syntax&quot;&gt;PHP approach&lt;/a&gt;, where the code is directly embedded in the HTML.&lt;/p&gt;
&lt;h3 id=&quot;compiling-and-rendering-django-templates&quot;&gt;Compiling and Rendering Django Templates&lt;a class=&quot;headerlink&quot; href=&quot;#compiling-and-rendering-django-templates&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Django templates let you dynamically change output content within a rendering context. You can think of templates as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Form_letter&quot;&gt;form letter&lt;/a&gt;, where the letter‚Äôs contents include places where information can be inserted. You can run the rendering process multiple times with different data and get different results each time.&lt;/p&gt;
&lt;p&gt;Django provides the &lt;strong&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/strong&gt; classes to represent the string template being rendered and the data being used during generation. The &lt;code&gt;Context&lt;/code&gt; class is a wrapper to a &lt;a href=&quot;https://realpython.com/python-dicts/&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; and provides key-value pairs to populate the generated content. The result of a rendered template can be any text but is frequently HTML. Django &lt;em&gt;is&lt;/em&gt; a web framework, after all.&lt;/p&gt;
&lt;p&gt;It‚Äôs time to build your first template. To see one in action, you‚Äôll first need a view. Add the following code to &lt;code&gt;core/views.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight python&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;linenos&quot;&gt; 1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# core/views.py&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 2&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.http&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 3&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.template&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 4&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 5&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;citizen_kane&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 6&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;{{movie}} was released in {{year}}&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 7&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 8&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;movie&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Citizen Kane&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;year&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1941&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 9&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt;10&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt;11&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this view, you see some of the main concepts that make up the Django templating language:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Line 6&lt;/strong&gt; contains references to &lt;code&gt;movie&lt;/code&gt; and &lt;code&gt;year&lt;/code&gt;. This is similar to a Python &lt;a href=&quot;https://realpython.com/python-f-strings/&quot;&gt;f-string&lt;/a&gt;. The double braces, or &lt;strong&gt;mustache brackets&lt;/strong&gt;, indicate the items that Django replaces when it renders the template.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Line 7&lt;/strong&gt; instantiates a &lt;code&gt;Template&lt;/code&gt; object by passing in the string that specifies the template.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Line 8&lt;/strong&gt; creates a &lt;code&gt;Context&lt;/code&gt; object by populating it with a dictionary. The &lt;code&gt;Context&lt;/code&gt; object contains all of the data available to the template when Django renders it. The template contains two items to replace: &lt;code&gt;{{movie}}&lt;/code&gt; with &lt;code&gt;&quot;Citizen Kane&quot;&lt;/code&gt; and &lt;code&gt;{{year}}&lt;/code&gt; with &lt;code&gt;1941&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Line 10&lt;/strong&gt; has the call to the &lt;code&gt;.render()&lt;/code&gt; method that generates the result.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Line 11&lt;/strong&gt; returns the rendered content wrapped in an &lt;code&gt;HttpResponse&lt;/code&gt; object.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To test this out, you‚Äôll need to make this view available in the browser, so you‚Äôll need to add a route. Modify &lt;code&gt;MoviePalace/urls.py&lt;/code&gt; as follows:&lt;/p&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/django-templates-tags-filters/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/django-templates-tags-filters/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Pass by Reference in Python: Best Practices</title>
      <id>https://realpython.com/courses/pass-by-reference-python-best-practices/</id>
      <link href="https://realpython.com/courses/pass-by-reference-python-best-practices/"/>
      <updated>2021-09-21T14:00:00+00:00</updated>
      <summary>In this course, you&#x27;ll explore the concept of passing by reference and learn how it relates to Python&#x27;s own system for handling function arguments. You&#x27;ll look at several use cases for passing by reference and learn some best practices for implementing pass-by-reference constructs in Python.</summary>
      <content type="html">
        &lt;p&gt;After gaining some familiarity with Python, you may notice cases in which your functions don&amp;rsquo;t modify arguments in place as you might expect, especially if you&amp;rsquo;re familiar with other programming languages. Some languages handle function arguments as &lt;strong&gt;references&lt;/strong&gt; to existing &lt;a href=&quot;https://realpython.com/python-variables/&quot;&gt;variables&lt;/a&gt;, which is known as &lt;strong&gt;pass by reference&lt;/strong&gt;. Other languages handle them as &lt;strong&gt;independent values&lt;/strong&gt;, an approach known as &lt;strong&gt;pass by value&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re an intermediate Python programmer who wishes to understand Python&amp;rsquo;s peculiar way of handling function arguments, then this course is for you. You&amp;rsquo;ll implement real use cases of pass-by-reference constructs in Python and learn several best practices to avoid pitfalls with your function arguments.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this course, you&amp;rsquo;ll learn:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What it means to &lt;strong&gt;pass by reference&lt;/strong&gt; and why you&amp;rsquo;d want to do so&lt;/li&gt;
&lt;li&gt;How passing by reference differs from both &lt;strong&gt;passing by value&lt;/strong&gt; and &lt;strong&gt;Python&amp;rsquo;s unique approach&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;How &lt;strong&gt;function arguments&lt;/strong&gt; behave in Python&lt;/li&gt;
&lt;li&gt;How you can use certain &lt;strong&gt;mutable types&lt;/strong&gt; to pass by reference in Python&lt;/li&gt;
&lt;li&gt;What the &lt;strong&gt;best practices&lt;/strong&gt; are for replicating pass by reference in Python&lt;/li&gt;
&lt;/ul&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Using the &quot;and&quot; Boolean Operator in Python</title>
      <id>https://realpython.com/python-and-operator/</id>
      <link href="https://realpython.com/python-and-operator/"/>
      <updated>2021-09-20T14:00:00+00:00</updated>
      <summary>In this step-by-step tutorial, you&#x27;ll learn how Python&#x27;s &quot;and&quot; operator works and how to use it in your code. You&#x27;ll get to know its special features and see what kind of programming problems you can solve by using &quot;and&quot; in Python.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;Python has three &lt;a href=&quot;https://realpython.com/python-boolean/&quot;&gt;Boolean&lt;/a&gt; operators, or &lt;strong&gt;logical operators&lt;/strong&gt;: &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, and &lt;code&gt;not&lt;/code&gt;. You can use them to check if certain conditions are met before deciding the execution path your programs will follow. In this tutorial, you‚Äôll learn about the &lt;code&gt;and&lt;/code&gt; operator and how to use it in your code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this tutorial, you‚Äôll learn how to:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Understand the logic behind Python‚Äôs &lt;strong&gt;&lt;code&gt;and&lt;/code&gt; operator&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Build and understand &lt;strong&gt;Boolean&lt;/strong&gt; and &lt;strong&gt;non-Boolean expressions&lt;/strong&gt; that use the &lt;code&gt;and&lt;/code&gt; operator&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;and&lt;/code&gt; operator in &lt;strong&gt;Boolean contexts&lt;/strong&gt; to decide the &lt;strong&gt;course of action&lt;/strong&gt; of your programs&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;and&lt;/code&gt; operator in &lt;strong&gt;non-Boolean contexts&lt;/strong&gt; to make your code more concise&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You‚Äôll also code a few practical examples that will help you understand how to use the &lt;code&gt;and&lt;/code&gt; operator to approach different problems in a &lt;a href=&quot;https://realpython.com/learning-paths/writing-pythonic-code/&quot;&gt;Pythonic&lt;/a&gt; way. Even if you don‚Äôt use all the features of &lt;code&gt;and&lt;/code&gt;, learning about them will allow you to write better and more accurate code.&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong markdown=&quot;1&quot;&gt;Free Download:&lt;/strong&gt; &lt;a href=&quot;https://realpython.com/bonus/python-tricks-sample-pdf/&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-python-tricks-sample-pdf&quot; data-focus=&quot;false&quot; markdown=&quot;1&quot;&gt;Get a sample chapter from Python Tricks: The Book&lt;/a&gt; that shows you Python‚Äôs best practices with simple examples you can apply instantly to write more beautiful + Pythonic code.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;working-with-boolean-logic-in-python&quot;&gt;Working With Boolean Logic in Python&lt;a class=&quot;headerlink&quot; href=&quot;#working-with-boolean-logic-in-python&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Back in 1854, &lt;a href=&quot;https://en.wikipedia.org/wiki/George_Boole&quot;&gt;George Boole&lt;/a&gt; authored &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Laws_of_Thought&quot;&gt;The Laws of Thought&lt;/a&gt;, which contains what‚Äôs known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Boolean_algebra&quot;&gt;Boolean algebra&lt;/a&gt;. This algebra relies on two values: &lt;strong&gt;true&lt;/strong&gt; and &lt;strong&gt;false&lt;/strong&gt;. It also defines a set of Boolean operations, also known as logical operations, denoted by the generic operators &lt;a href=&quot;https://en.wikipedia.org/wiki/Logical_conjunction&quot;&gt;&lt;code&gt;AND&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Logical_disjunction&quot;&gt;&lt;code&gt;OR&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Negation&quot;&gt;&lt;code&gt;NOT&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These Boolean values and operators are pretty helpful in programming. For example, you can construct arbitrarily complex &lt;a href=&quot;https://en.wikipedia.org/wiki/Boolean_expression&quot;&gt;Boolean expressions&lt;/a&gt; with the operators and determine their resulting &lt;a href=&quot;https://en.wikipedia.org/wiki/Truth_value&quot;&gt;truth value&lt;/a&gt; as true or false. You can use the &lt;strong&gt;truth value&lt;/strong&gt; of Boolean expressions to decide the course of action of your programs.&lt;/p&gt;
&lt;p&gt;In Python, the &lt;a href=&quot;https://realpython.com/python-boolean/&quot;&gt;Boolean type&lt;/a&gt; &lt;code&gt;bool&lt;/code&gt; is a subclass of &lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; and can take the values &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight python repl&quot;&gt;&lt;span class=&quot;repl-toggle&quot; title=&quot;Toggle REPL prompts and output&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;issubclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Help on class bool in module builtins:&lt;/span&gt;

&lt;span class=&quot;go&quot;&gt;class bool(int)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    ...&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;&amp;lt;class &#x27;bool&#x27;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;&amp;lt;class &#x27;bool&#x27;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;isinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;True&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see in this code, Python implements &lt;code&gt;bool&lt;/code&gt; as a subclass of &lt;code&gt;int&lt;/code&gt; with two possible values, &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt;. These values are &lt;a href=&quot;https://docs.python.org/3/library/constants.html#built-in-constants&quot;&gt;built-in constants&lt;/a&gt; in Python. They‚Äôre internally implemented as integer &lt;a href=&quot;https://realpython.com/python-numbers/&quot;&gt;numbers&lt;/a&gt; with the value &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;False&lt;/code&gt;. Note that both &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt; must be capitalized.&lt;/p&gt;
&lt;p&gt;Along with the &lt;code&gt;bool&lt;/code&gt; type, Python provides three Boolean operators, or logical operators, that allow you to combine Boolean expressions and objects into more elaborate expressions. Those operators are the following:&lt;/p&gt;
&lt;div class=&quot;table-responsive&quot;&gt;
&lt;table class=&quot;table table-hover&quot;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&quot;text-left&quot;&gt;Operator&lt;/th&gt;
&lt;th class=&quot;text-left&quot;&gt;Logical Operation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;text-left&quot;&gt;&lt;a href=&quot;https://realpython.com/python-keywords/#the-and-keyword&quot;&gt;&lt;code&gt;and&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;text-left&quot;&gt;Conjunction&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;text-left&quot;&gt;&lt;a href=&quot;https://realpython.com/python-or-operator/&quot;&gt;&lt;code&gt;or&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;text-left&quot;&gt;Disjunction&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;text-left&quot;&gt;&lt;a href=&quot;https://realpython.com/python-keywords/#the-not-keyword&quot;&gt;&lt;code&gt;not&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td class=&quot;text-left&quot;&gt;Negation&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;With these operators, you can connect several Boolean expressions and objects to build your own expressions. Unlike other languages, Python uses English words to denote Boolean operators. These words are &lt;strong&gt;keywords&lt;/strong&gt; of the language, so you can‚Äôt use them as identifiers.&lt;/p&gt;
&lt;p&gt;In this tutorial, you‚Äôll learn about Python‚Äôs &lt;code&gt;and&lt;/code&gt; operator. This operator implements the logical &lt;code&gt;AND&lt;/code&gt; operation. You‚Äôll learn how it works and how to use it either in a Boolean or non-Boolean context.&lt;/p&gt;
&lt;h2 id=&quot;getting-started-with-pythons-and-operator&quot;&gt;Getting Started With Python‚Äôs &lt;code&gt;and&lt;/code&gt; Operator&lt;a class=&quot;headerlink&quot; href=&quot;#getting-started-with-pythons-and-operator&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Python‚Äôs &lt;code&gt;and&lt;/code&gt; operator takes two &lt;strong&gt;operands&lt;/strong&gt;, which can be Boolean expressions, objects, or a combination. With those operands, the &lt;code&gt;and&lt;/code&gt; operator builds more elaborate expressions. The operands in an &lt;code&gt;and&lt;/code&gt; expression are commonly known as &lt;strong&gt;conditions&lt;/strong&gt;. If both conditions are true, then the &lt;code&gt;and&lt;/code&gt; expression returns a true result. Otherwise, it returns a false result:&lt;/p&gt;
&lt;div class=&quot;highlight python repl&quot;&gt;&lt;span class=&quot;repl-toggle&quot; title=&quot;Toggle REPL prompts and output&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;True&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;True&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;False&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;False&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;False&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;True&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;False&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;False&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;False&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These examples show that an &lt;code&gt;and&lt;/code&gt; expression only returns &lt;code&gt;True&lt;/code&gt; when both operands in the expressions are true. Since the &lt;code&gt;and&lt;/code&gt; operator takes two operands to build an expression, it‚Äôs a &lt;strong&gt;binary operator&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The quick examples above show what‚Äôs known as the &lt;code&gt;and&lt;/code&gt; operator‚Äôs truth table:&lt;/p&gt;
&lt;div class=&quot;table-responsive&quot;&gt;
&lt;table class=&quot;table table-hover&quot;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&quot;text-left&quot;&gt;&lt;code&gt;operand1&lt;/code&gt;&lt;/th&gt;
&lt;th class=&quot;text-left&quot;&gt;&lt;code&gt;operand2&lt;/code&gt;&lt;/th&gt;
&lt;th class=&quot;text-left&quot;&gt;&lt;code&gt;operand1 and operand2&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&quot;text-left&quot;&gt;True&lt;/td&gt;
&lt;td class=&quot;text-left&quot;&gt;True&lt;/td&gt;
&lt;td class=&quot;text-left&quot;&gt;True&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;text-left&quot;&gt;True&lt;/td&gt;
&lt;td class=&quot;text-left&quot;&gt;False&lt;/td&gt;
&lt;td class=&quot;text-left&quot;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;text-left&quot;&gt;False&lt;/td&gt;
&lt;td class=&quot;text-left&quot;&gt;False&lt;/td&gt;
&lt;td class=&quot;text-left&quot;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&quot;text-left&quot;&gt;False&lt;/td&gt;
&lt;td class=&quot;text-left&quot;&gt;True&lt;/td&gt;
&lt;td class=&quot;text-left&quot;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;This table summarizes the resulting &lt;strong&gt;truth value&lt;/strong&gt; of a Boolean expression like &lt;code&gt;operand1 and operand2&lt;/code&gt;. The result of the expression depends on the truth values of its operands. It‚Äôll be true if both are true. Otherwise, it‚Äôll be false. This is the general logic behind the &lt;code&gt;and&lt;/code&gt; operator. However, this operator can do more than that in Python.&lt;/p&gt;
&lt;p&gt;In the following sections, you‚Äôll learn how to use &lt;code&gt;and&lt;/code&gt; for building your own expressions with different types of operands.&lt;/p&gt;
&lt;h3 id=&quot;using-pythons-and-operator-with-boolean-expressions&quot;&gt;Using Python‚Äôs &lt;code&gt;and&lt;/code&gt; Operator With Boolean Expressions&lt;a class=&quot;headerlink&quot; href=&quot;#using-pythons-and-operator-with-boolean-expressions&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You‚Äôll typically use logical operators to build &lt;strong&gt;compound Boolean expressions&lt;/strong&gt;, which are combinations of &lt;a href=&quot;https://realpython.com/python-variables/&quot;&gt;variables&lt;/a&gt; and values that produce a Boolean value as a result. In other words, Boolean expressions return &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/python-and-operator/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/python-and-operator/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #78: Learning Python Through Illustrated Stories</title>
      <id>https://realpython.com/podcasts/rpp/78/</id>
      <link href="https://realpython.com/podcasts/rpp/78/"/>
      <updated>2021-09-17T12:00:00+00:00</updated>
      <summary>Are you a visual learner? Does it help to have programming concepts shared with concrete examples and images? Would you like to see if your child might be interested in programming? This week on the show, we talk with author Shari Eskenas about her books, &quot;A Day in Code - Python: Learn to Code in Python Through an Illustrated Story&quot; and &quot;Learn Python Through Nursery Rhymes &amp; Fairy Tales.&quot;</summary>
      <content type="html">
        &lt;p&gt;Are you a visual learner? Does it help to have programming concepts shared with concrete examples and images? Would you like to see if your child might be interested in programming? This week on the show, we talk with author Shari Eskenas about her books, &quot;A Day in Code - Python: Learn to Code in Python Through an Illustrated Story&quot; and &quot;Learn Python Through Nursery Rhymes &amp; Fairy Tales.&quot;&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Build a Personal Diary With Django and Python</title>
      <id>https://realpython.com/django-diary-project-python/</id>
      <link href="https://realpython.com/django-diary-project-python/"/>
      <updated>2021-09-15T14:00:00+00:00</updated>
      <summary>In this beginner-friendly tutorial, you&#x27;ll build a personal diary in Django. You&#x27;ll use the strengths of the Django web framework and learn the basics of web apps.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;A &lt;strong&gt;diary&lt;/strong&gt; is a personal safe space. With the help of Django, you can create a diary on your own computer without storing data in anyone else‚Äôs cloud. By following along with the project below, you‚Äôll see how quickly you can build a functioning &lt;strong&gt;web app&lt;/strong&gt; in Django without any external dependencies.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this tutorial, you‚Äôll learn how to:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set up a &lt;strong&gt;Django project&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Work with the standard &lt;strong&gt;SQLite&lt;/strong&gt; database&lt;/li&gt;
&lt;li&gt;Make use of the Django &lt;strong&gt;admin site&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Create &lt;strong&gt;models&lt;/strong&gt; and &lt;strong&gt;class-based views&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Nest and style &lt;strong&gt;templates&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Secure your diary with &lt;strong&gt;authentication&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This tutorial will guide you &lt;strong&gt;step-by-step&lt;/strong&gt; to your final diary. If you‚Äôre just starting out with Django and want to finish your first real project, then this tutorial is for you!&lt;/p&gt;
&lt;p&gt;To get the complete source code for the Django project and its steps, click the link below:&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong markdown=&quot;1&quot;&gt;Get Source Code:&lt;/strong&gt; &lt;a href=&quot;https://realpython.com/bonus/django-diary-project-code/&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-django-diary-project-code&quot; data-focus=&quot;false&quot; markdown=&quot;1&quot;&gt;Click here to get the source code you‚Äôll use&lt;/a&gt; to build a personal diary web app with Django and Python in this tutorial.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;demo-video&quot;&gt;Demo Video&lt;a class=&quot;headerlink&quot; href=&quot;#demo-video&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;On the main page of your diary, you‚Äôll have a list of entries. You can scroll through them and create new ones with a click of a button. The styling is provided in this tutorial, so you can focus on the Django part of the code. Here‚Äôs a quick demo video of how it will look in action:&lt;/p&gt;
&lt;div class=&quot;embed-responsive embed-responsive-16by9 rounded mb-3 border&quot;&gt;
  &lt;iframe loading=&quot;lazy&quot; class=&quot;embed-responsive-item&quot; src=&quot;https://player.vimeo.com/video/561429980?background=1&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;By the end of the tutorial, you‚Äôll be able to flawlessly navigate your diary to create, read, update, and delete entries on demand.&lt;/p&gt;
&lt;h2 id=&quot;project-overview&quot;&gt;Project Overview&lt;a class=&quot;headerlink&quot; href=&quot;#project-overview&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The tutorial is divided into multiple steps. That way, you can take breaks and continue at your own pace. In each step, you‚Äôll tackle a specific area of your diary project:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Setting up your Django diary project&lt;/li&gt;
&lt;li&gt;Creating entries on the back end&lt;/li&gt;
&lt;li&gt;Displaying entries on the front end&lt;/li&gt;
&lt;li&gt;Adding styling&lt;/li&gt;
&lt;li&gt;Managing entries on the front end&lt;/li&gt;
&lt;li&gt;Improving your user experience&lt;/li&gt;
&lt;li&gt;Implementing authentication&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By following along, you‚Äôll explore the basics of web apps and how to add common features of a Django project. After finishing the tutorial, you‚Äôll have created your own personal diary app and will have a &lt;strong&gt;Django project blueprint&lt;/strong&gt; to build upon.&lt;/p&gt;
&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;a class=&quot;headerlink&quot; href=&quot;#prerequisites&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You don‚Äôt need any previous knowledge of Django to complete this project. If you want to learn more about the topics you encounter in this tutorial, you‚Äôll find links to resources along the way.&lt;/p&gt;
&lt;p&gt;However, you should be comfortable using the command line and have a &lt;a href=&quot;https://realpython.com/products/python-basics-book/&quot;&gt;basic knowledge&lt;/a&gt; of Python and &lt;a href=&quot;https://realpython.com/python3-object-oriented-programming/&quot;&gt;classes&lt;/a&gt;. Although it helps to know about &lt;a href=&quot;https://realpython.com/python-virtual-environments-a-primer/&quot;&gt;virtual environments&lt;/a&gt; and &lt;a href=&quot;https://realpython.com/what-is-pip/&quot;&gt;&lt;code&gt;pip&lt;/code&gt;&lt;/a&gt;, you‚Äôll learn how to set everything up as you work through the tutorial.&lt;/p&gt;
&lt;h2 id=&quot;step-1-setting-up-your-django-diary&quot;&gt;Step 1: Setting Up Your Django Diary&lt;a class=&quot;headerlink&quot; href=&quot;#step-1-setting-up-your-django-diary&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Start the project by creating your project directory and setting up a &lt;strong&gt;virtual environment&lt;/strong&gt;. This setup will keep your code isolated from any other projects on your machine. You can name your project folder and the virtual environment any way you want. In this tutorial, the project folder is named &lt;code&gt;my-diary&lt;/code&gt;, and the virtual environment is named &lt;code&gt;.venv&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight sh&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mkdir my-diary
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; my-diary
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python3 -m venv .venv
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; .venv/bin/activate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your prompt now starts with the name of your virtual environment in parenthesis. This is an indicator that the virtual environment is activated. For the rest of the tutorial, your virtual environment must be activated. All of the following steps will take place inside this directory or its subdirectories.&lt;/p&gt;
&lt;div class=&quot;alert alert-primary&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To activate your virtual environment on &lt;strong&gt;Windows&lt;/strong&gt;, you might need to run this command:&lt;/p&gt;
&lt;div class=&quot;highlight doscon&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c:\&amp;gt;&lt;/span&gt; python -m venv .venv
&lt;span class=&quot;gp&quot;&gt;c:\&amp;gt;&lt;/span&gt; .venv\Scripts\activate.bat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For other platforms and shells, you might need to use a &lt;a href=&quot;https://docs.python.org/3/library/venv.html#creating-virtual-environments&quot;&gt;different command&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The only other requirement for your diary is Django itself. Install the specific version of this tutorial with &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight sh&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp gp-VirtualEnv&quot;&gt;(.venv)&lt;/span&gt; &lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python -m pip install &lt;span class=&quot;nv&quot;&gt;Django&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;.2.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command installs Django and some dependencies that Django requires. That‚Äôs everything you need.&lt;/p&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/django-diary-project-python/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/django-diary-project-python/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Using Data Classes in Python</title>
      <id>https://realpython.com/courses/python-data-classes/</id>
      <link href="https://realpython.com/courses/python-data-classes/"/>
      <updated>2021-09-14T14:00:00+00:00</updated>
      <summary>Data classes are one of the new features introduced in Python 3.7. When using data classes, you don&#x27;t have to write boilerplate code to get proper initialization, representation, and comparisons for your objects.</summary>
      <content type="html">
        &lt;p&gt;One &lt;a href=&quot;https://realpython.com/python37-new-features/&quot;&gt;new and exciting feature that came out in Python 3.7&lt;/a&gt; was the data class. A data class is a class typically containing mainly data, although there aren&amp;rsquo;t really any restrictions.&lt;/p&gt;
&lt;p&gt;With data classes, you don&amp;rsquo;t have to write boilerplate code to get proper initialization, representation, and comparisons for your objects.&lt;/p&gt;
&lt;p&gt;In this course, you&amp;rsquo;ll learn how to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Define your own &lt;strong&gt;data classes&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Add &lt;strong&gt;default values&lt;/strong&gt; to the fields in your data class&lt;/li&gt;
&lt;li&gt;Customize the &lt;strong&gt;ordering&lt;/strong&gt; of data class objects&lt;/li&gt;
&lt;li&gt;Work with &lt;strong&gt;immutable data classes&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Python News: What&#x27;s New From August 2021?</title>
      <id>https://realpython.com/python-news-august-2021/</id>
      <link href="https://realpython.com/python-news-august-2021/"/>
      <updated>2021-09-13T14:00:00+00:00</updated>
      <summary>August 2021 was an eventful month in the world of Python. In this article, you&#x27;ll get up to speed on everything that happened in the past month, including three new Python releases.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;Summer holidays have ended, and it‚Äôs back to school again. While it was a time of leisure and getting disconnected from the virtual world for many of us, the Python maintainers and contributors have been busy working during that same period. Just in &lt;strong&gt;August 2021&lt;/strong&gt;, the Python community saw three new Python releases, bringing some important security fixes, optimizations, and brand-new features.&lt;/p&gt;
&lt;p&gt;Let‚Äôs dive into the biggest Python news from the past month!&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;&lt;p&gt;&lt;strong&gt;Free Bonus:&lt;/strong&gt; &lt;a href=&quot;&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-python-cheat-sheet-shortened&quot; data-focus=&quot;false&quot;&gt;Click here to get a Python Cheat Sheet&lt;/a&gt; and learn the basics of Python 3, like working with data types, dictionaries, lists, and Python functions.&lt;/p&gt;&lt;/div&gt;

&lt;h2 id=&quot;python-310-is-almost-ready&quot;&gt;Python 3.10 Is Almost Ready&lt;a class=&quot;headerlink&quot; href=&quot;#python-310-is-almost-ready&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;On August 3rd, the &lt;a href=&quot;https://pythoninsider.blogspot.com/2021/08/python-3100rc1-is-available.html&quot;&gt;first preview release of Python 3.10.0&lt;/a&gt; finally came out.&lt;/p&gt;
&lt;p&gt;The Python community has been holding their breath for months in anticipation of the next minor release of their favorite language. Python 3.10.0 will be packed with loads of exciting new &lt;a href=&quot;https://docs.python.org/3.10/whatsnew/3.10.html&quot;&gt;features and improvements&lt;/a&gt;. Some even sparked a bit of &lt;a href=&quot;https://lwn.net/Articles/845480/&quot;&gt;controversy&lt;/a&gt;, but that‚Äôs often the case with groundbreaking changes.&lt;/p&gt;
&lt;p&gt;If you can‚Äôt wait to give Python 3.10.0 a test drive before it‚Äôs officially released on &lt;strong&gt;October 4th&lt;/strong&gt;, then you can grab its release candidate that got published early last month. The final release will only include bug fixes without adding extra features, so the preview release is fairly complete.&lt;/p&gt;
&lt;p&gt;You can access the preview release in a couple of different ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can navigate your web browser to the official &lt;a href=&quot;https://www.python.org/downloads/release/python-3100rc1/&quot;&gt;Python 3.10.0rc1 downloads page&lt;/a&gt; and fetch either the source code to compile or a Python installer for your operating system.&lt;/li&gt;
&lt;li&gt;Alternatively, you can run the release candidate alongside your other Python interpreters with the help of &lt;a href=&quot;https://realpython.com/intro-to-pyenv/&quot;&gt;pyenv&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Finally, you can try the latest Python release without installing it by running the interpreter in a &lt;a href=&quot;https://realpython.com/python-versions-docker/&quot;&gt;Docker container&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/python-news-august-2021/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/python-news-august-2021/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #77: Advantages of Completing Small Python Projects</title>
      <id>https://realpython.com/podcasts/rpp/77/</id>
      <link href="https://realpython.com/podcasts/rpp/77/"/>
      <updated>2021-09-10T12:00:00+00:00</updated>
      <summary>Are you a beginner or intermediate Python programmer who has made it through some of the fundamentals? Have you tried to tackle a big project but got stuck and frustrated? Completing some small projects might be the answer. This week on the show, we have author Al Sweigart and talk about his new book, &quot;The Big Book of Small Python Projects.&quot;</summary>
      <content type="html">
        &lt;p&gt;Are you a beginner or intermediate Python programmer who has made it through some of the fundamentals? Have you tried to tackle a big project but got stuck and frustrated? Completing some small projects might be the answer. This week on the show, we have author Al Sweigart and talk about his new book, &quot;The Big Book of Small Python Projects.&quot;&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>A Python Guide to the Fibonacci Sequence</title>
      <id>https://realpython.com/fibonacci-sequence-python/</id>
      <link href="https://realpython.com/fibonacci-sequence-python/"/>
      <updated>2021-09-08T14:00:00+00:00</updated>
      <summary>In this step-by-step tutorial, you&#x27;ll explore the Fibonacci sequence in Python, which serves as an invaluable springboard into the world of recursion, and learn how to optimize recursive algorithms in the process.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;The &lt;strong&gt;Fibonacci sequence&lt;/strong&gt; is a pretty famous sequence of integer numbers. The sequence comes up naturally in many problems and has a nice recursive definition. Learning how to generate it is an essential step in the pragmatic programmer‚Äôs journey toward mastering &lt;a href=&quot;https://realpython.com/python-recursion/&quot;&gt;recursion&lt;/a&gt;. In this tutorial, you‚Äôll focus on learning what the Fibonacci sequence is and how to generate it using Python.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this tutorial, you‚Äôll learn how to:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Generate the Fibonacci sequence using a &lt;strong&gt;recursive algorithm&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Optimize the recursive Fibonacci algorithm using &lt;strong&gt;memoization&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Generate the Fibonacci sequence using an &lt;strong&gt;iterative algorithm&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get the most out of this tutorial, you should know the basics of &lt;a href=&quot;https://realpython.com/sorting-algorithms-python/#measuring-efficiency-with-big-o-notation&quot;&gt;Big O notation&lt;/a&gt;, &lt;a href=&quot;https://realpython.com/python3-object-oriented-programming/&quot;&gt;object-oriented programming&lt;/a&gt;, &lt;a href=&quot;https://realpython.com/operator-function-overloading/#the-internals-of-operations-like-len-and&quot;&gt;Python‚Äôs special methods&lt;/a&gt;, &lt;a href=&quot;https://realpython.com/python-conditional-statements/&quot;&gt;conditional statements&lt;/a&gt;, &lt;a href=&quot;https://realpython.com/defining-your-own-python-function/&quot;&gt;functions&lt;/a&gt;, and &lt;a href=&quot;https://realpython.com/python-data-structures/&quot;&gt;basic data structures&lt;/a&gt; like &lt;a href=&quot;https://realpython.com/python-lists-tuples/&quot;&gt;lists&lt;/a&gt;, &lt;a href=&quot;https://realpython.com/python-deque/#building-efficient-queues-with-deque&quot;&gt;queues&lt;/a&gt;, and &lt;a href=&quot;https://realpython.com/how-to-implement-python-stack/&quot;&gt;stacks&lt;/a&gt;. Having some familiarity with these concepts will greatly help you understand the new ones you‚Äôll be exploring in this tutorial.&lt;/p&gt;
&lt;p&gt;Let‚Äôs dive right in!&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong markdown=&quot;1&quot;&gt;Free Download:&lt;/strong&gt; &lt;a href=&quot;https://realpython.com/bonus/python-basics-sample-download/&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-python-basics-sample-download&quot; data-focus=&quot;false&quot; markdown=&quot;1&quot;&gt;Get a sample chapter from Python Basics: A Practical Introduction to Python 3&lt;/a&gt; to see how you can go from beginner to intermediate in Python with a complete curriculum, up-to-date for Python 3.8.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;getting-started-with-the-fibonacci-sequence&quot;&gt;Getting Started With the Fibonacci Sequence&lt;a class=&quot;headerlink&quot; href=&quot;#getting-started-with-the-fibonacci-sequence&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.britannica.com/biography/Fibonacci&quot;&gt;Leonardo Fibonacci&lt;/a&gt; was an Italian mathematician who was able to quickly produce an answer to this question asked by Emperor Frederick II of Swabia: ‚ÄúHow many pairs of rabbits are obtained in a year, excluding cases of death, supposing that each couple gives birth to another couple every month and that the youngest couples are able to reproduce already at the second month of life?‚Äù&lt;/p&gt;
&lt;p&gt;The answer was the following sequence:&lt;/p&gt;
&lt;figure class=&quot;&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;img-fluid mx-auto d-block w-75&quot; src=&quot;https://files.realpython.com/media/9645419cf728c44cf0bd28ab667f69aa.017fa332ab15.png&quot; width=&quot;2724&quot; height=&quot;109&quot; srcset=&quot;https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/9645419cf728c44cf0bd28ab667f69aa.017fa332ab15.png&amp;amp;w=681&amp;amp;sig=0b595e92a2fe83aa2bbdf9f6ac5b659e7db18ef0 681w, https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/9645419cf728c44cf0bd28ab667f69aa.017fa332ab15.png&amp;amp;w=1362&amp;amp;sig=504db41e40099ac6a7eaabad2bbca50452f98468 1362w, https://files.realpython.com/media/9645419cf728c44cf0bd28ab667f69aa.017fa332ab15.png 2724w&quot; sizes=&quot;75vw&quot; alt=&quot;Fibonacci recurrence relation starting with 0&quot; data-asset=&quot;3766&quot;&gt;&lt;/figure&gt;

&lt;p&gt;The pattern begins after the first two numbers, 0 and 1, where each number in the sequence is always the sum of the two numbers before it. Indian mathematicians had known about this sequence since the sixth century, and Fibonacci leveraged it to calculate the growth of rabbit populations.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;F&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;) is used to indicate the number of pairs of rabbits present in month &lt;em&gt;n&lt;/em&gt;, so the sequence can be expressed like this:&lt;/p&gt;
&lt;figure class=&quot;&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;img-fluid mx-auto d-block w-50&quot; src=&quot;https://files.realpython.com/media/mwong-fibonacci-recurrence-relation.09c03cec1b7d.png&quot; width=&quot;1146&quot; height=&quot;332&quot; srcset=&quot;https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/mwong-fibonacci-recurrence-relation.09c03cec1b7d.png&amp;amp;w=286&amp;amp;sig=9a97942fc22f1130cf95db62923918a5ceaa8a33 286w, https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/mwong-fibonacci-recurrence-relation.09c03cec1b7d.png&amp;amp;w=573&amp;amp;sig=e70b1b5b487be72c05f429dca7f7706e7ba61551 573w, https://files.realpython.com/media/mwong-fibonacci-recurrence-relation.09c03cec1b7d.png 1146w&quot; sizes=&quot;75vw&quot; alt=&quot;The Fibonacci sequence described as a recurrence relation. F(0) and F(1) are defined to be 0, and the nth Fibonacci number is the sum of F(n-1) and F(n-2)&quot; data-asset=&quot;3721&quot;&gt;&lt;/figure&gt;

&lt;p&gt;In mathematical terminology, you‚Äôd call this a &lt;a href=&quot;https://en.wikipedia.org/wiki/Recurrence_relation&quot;&gt;recurrence relation&lt;/a&gt;, meaning that each term of the sequence (beyond 0 and 1) is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Function_(mathematics)&quot;&gt;function&lt;/a&gt; of the preceding terms.&lt;/p&gt;
&lt;p&gt;There‚Äôs also a version of the sequence where the first two numbers are both 1, like so:&lt;/p&gt;
&lt;figure class=&quot;&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;img-fluid mx-auto d-block w-75&quot; src=&quot;https://files.realpython.com/media/403b57adc167e9addd094b3b2d3540bb.ba099fd0fdc9.png&quot; width=&quot;2600&quot; height=&quot;109&quot; srcset=&quot;https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/403b57adc167e9addd094b3b2d3540bb.ba099fd0fdc9.png&amp;amp;w=650&amp;amp;sig=189dae4173bee083facad91c750beb942b49db0c 650w, https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/403b57adc167e9addd094b3b2d3540bb.ba099fd0fdc9.png&amp;amp;w=1300&amp;amp;sig=c7f884a5e37b7491edd3962407328172a871b208 1300w, https://files.realpython.com/media/403b57adc167e9addd094b3b2d3540bb.ba099fd0fdc9.png 2600w&quot; sizes=&quot;75vw&quot; alt=&quot;Fibonacci sequence starting with 11&quot; data-asset=&quot;3767&quot;&gt;&lt;/figure&gt;

&lt;p&gt;In this alternative version, &lt;em&gt;F&lt;/em&gt;(0) is still implicitly 0, but you start from &lt;em&gt;F&lt;/em&gt;(1) and &lt;em&gt;F&lt;/em&gt;(2) instead. The algorithm remains the same because you‚Äôre always summing the previous two numbers to get the next number in the sequence.&lt;/p&gt;
&lt;p&gt;For the purposes of this tutorial, you‚Äôll use the version of the sequence that starts with 0.&lt;/p&gt;
&lt;h2 id=&quot;examining-the-recursion-behind-the-fibonacci-sequence&quot;&gt;Examining the Recursion Behind the Fibonacci Sequence&lt;a class=&quot;headerlink&quot; href=&quot;#examining-the-recursion-behind-the-fibonacci-sequence&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Generating the Fibonacci sequence is a classic recursive problem. &lt;strong&gt;Recursion&lt;/strong&gt; is when a function refers to itself to break down the problem it‚Äôs trying to solve. In every function call, the problem becomes smaller until it reaches a &lt;strong&gt;base case&lt;/strong&gt;, after which it will then return the result to each intermediate caller until it &lt;a href=&quot;https://realpython.com/python-return-statement/&quot;&gt;returns&lt;/a&gt; the final result back to the original caller.&lt;/p&gt;
&lt;p&gt;If you wanted to calculate the &lt;em&gt;F&lt;/em&gt;(5) Fibonacci number, you‚Äôd need to calculate its predecessors, &lt;em&gt;F&lt;/em&gt;(4) and &lt;em&gt;F&lt;/em&gt;(3), first. And in order to calculate &lt;em&gt;F&lt;/em&gt;(4) and &lt;em&gt;F&lt;/em&gt;(3), you would need to calculate their predecessors. The breakdown of &lt;em&gt;F&lt;/em&gt;(5) into smaller subproblems would look like this:&lt;/p&gt;
&lt;figure class=&quot;&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;img-fluid mx-auto d-block w-66&quot; src=&quot;https://files.realpython.com/media/mwong-fib5.afb4734df50f.png&quot; width=&quot;2069&quot; height=&quot;687&quot; srcset=&quot;https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/mwong-fib5.afb4734df50f.png&amp;amp;w=517&amp;amp;sig=f451c9f9e5fb6bb9cbe7e91d728cb488cbedc990 517w, https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/mwong-fib5.afb4734df50f.png&amp;amp;w=1034&amp;amp;sig=f1b9d2cee91c433a645d16711b95f510221df551 1034w, https://files.realpython.com/media/mwong-fib5.afb4734df50f.png 2069w&quot; sizes=&quot;75vw&quot; alt=&quot;How to calculate the fifth Fibonacci number&quot; data-asset=&quot;3720&quot;&gt;&lt;/figure&gt;

&lt;p&gt;Each time the Fibonacci function is called, it gets broken down into two smaller subproblems because that‚Äôs how you defined the recurrence relation. When it reaches the base case of either &lt;em&gt;F&lt;/em&gt;(0) or &lt;em&gt;F&lt;/em&gt;(1), it can finally return a result back to its caller.&lt;/p&gt;
&lt;p&gt;In order to calculate the fifth number in the Fibonacci sequence, you solve smaller but identical problems until you reach the base cases, where you can start returning a result:&lt;/p&gt;
&lt;figure class=&quot;js-lightbox&quot;&gt;&lt;a href=&quot;https://files.realpython.com/media/Screen_Shot_2021-06-04_at_3.24.02_PM.49155bd58b7d.png&quot; target=&quot;_blank&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;img-fluid mx-auto d-block w-75&quot; src=&quot;https://files.realpython.com/media/Screen_Shot_2021-06-04_at_3.24.02_PM.49155bd58b7d.png&quot; width=&quot;1448&quot; height=&quot;646&quot; srcset=&quot;https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/Screen_Shot_2021-06-04_at_3.24.02_PM.49155bd58b7d.png&amp;amp;w=362&amp;amp;sig=17e623aa0c5158f601e13ab2ca7208974b2d599d 362w, https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/Screen_Shot_2021-06-04_at_3.24.02_PM.49155bd58b7d.png&amp;amp;w=724&amp;amp;sig=4cac29f4993e1110e1d4c2a52b21b41b18581cd6 724w, https://files.realpython.com/media/Screen_Shot_2021-06-04_at_3.24.02_PM.49155bd58b7d.png 1448w&quot; sizes=&quot;75vw&quot; alt=&quot;Recursive representation of Fibonacci Sequence&quot; data-asset=&quot;3589&quot;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/fibonacci-sequence-python/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/fibonacci-sequence-python/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Graph Your Data With Python and ggplot</title>
      <id>https://realpython.com/courses/graph-data-with-python-and-ggplot/</id>
      <link href="https://realpython.com/courses/graph-data-with-python-and-ggplot/"/>
      <updated>2021-09-07T14:00:00+00:00</updated>
      <summary>In this course, you&#x27;ll learn how to use ggplot in Python to build data visualizations with plotnine. You&#x27;ll discover what a grammar of graphics is and how it can help you create plots in a very concise and consistent way.</summary>
      <content type="html">
        &lt;p&gt;In this course, you&amp;rsquo;ll learn how to use &lt;code&gt;ggplot&lt;/code&gt; in Python to create data visualizations using a &lt;strong&gt;grammar of graphics&lt;/strong&gt;. A grammar of graphics is a high-level tool that allows you to create data plots in an efficient and consistent way. It abstracts most low-level details, letting you focus on creating meaningful and beautiful visualizations for your data. &lt;/p&gt;
&lt;p&gt;There are several Python packages that provide a grammar of graphics. This course focuses on &lt;strong&gt;plotnine&lt;/strong&gt; since it&amp;rsquo;s one of the most mature ones. plotnine is based on &lt;a href=&quot;https://ggplot2.tidyverse.org/&quot;&gt;&lt;code&gt;ggplot2&lt;/code&gt;&lt;/a&gt; from the R programming language, so if you have a background in R, then you can consider plotnine as the equivalent of &lt;code&gt;ggplot2&lt;/code&gt; in Python.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this course, you&amp;rsquo;ll learn how to:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;strong&gt;plotnine&lt;/strong&gt; and &lt;strong&gt;Jupyter Notebook&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Combine the different elements of the &lt;strong&gt;grammar of graphics&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Use plotnine to &lt;strong&gt;create visualizations&lt;/strong&gt; in an efficient and consistent way&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Export&lt;/strong&gt; your data visualizations to files&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This course assumes that you already have &lt;a href=&quot;https://realpython.com/products/python-basics-book/&quot;&gt;some experience in Python&lt;/a&gt; and at least some knowledge of &lt;strong&gt;Jupyter Notebook&lt;/strong&gt; and &lt;strong&gt;pandas&lt;/strong&gt;. To get up to speed on these topics, check out &lt;a href=&quot;https://realpython.com/jupyter-notebook-introduction/&quot;&gt;Jupyter Notebook: An Introduction&lt;/a&gt; and &lt;a href=&quot;https://realpython.com/pandas-python-explore-dataset/&quot;&gt;Using Pandas and Python to Explore Your Dataset&lt;/a&gt;.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>How Long Does It Take to Learn Python?</title>
      <id>https://realpython.com/how-long-does-it-take-to-learn-python/</id>
      <link href="https://realpython.com/how-long-does-it-take-to-learn-python/"/>
      <updated>2021-09-06T14:00:00+00:00</updated>
      <summary>In this article, you&#x27;ll assess whether or not learning Python is a good investment of your time, how long it will take you, and what background factors you need to consider when planning your learning journey. You&#x27;ll also learn what resources exist that can help you get started.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;You‚Äôve probably found at least one blog post where the author reveals that they learned Python in a handful of days and quickly transitioned into a high-paying job. Some of these stories may be true, but they don‚Äôt help you prepare for a steady learning marathon. So, how long does it &lt;em&gt;really&lt;/em&gt; take to learn Python, and is it worth your time investment?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this article, you‚Äôll learn:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What ‚Äúlearning Python‚Äù means and how you can &lt;strong&gt;measure your progress&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;What different &lt;strong&gt;reasons&lt;/strong&gt; there are for learning Python&lt;/li&gt;
&lt;li&gt;What &lt;strong&gt;background factors&lt;/strong&gt; affect your learning approach and outcome&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How much time&lt;/strong&gt; you‚Äôll want to invest in learning Python at &lt;strong&gt;different skill levels&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Which &lt;strong&gt;resources&lt;/strong&gt; you can use to improve your learning process&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get started, you‚Äôll go over some different reasons people want to learn to program in Python. Keep your personal motivations in mind and identify where you place yourself. Your reasons for learning Python will impact both your approach and the amount of time you‚Äôll need to set aside.&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong markdown=&quot;1&quot;&gt;Free Download:&lt;/strong&gt; &lt;a href=&quot;https://realpython.com/bonus/python-tricks-sample-pdf/&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-python-tricks-sample-pdf&quot; data-focus=&quot;false&quot; markdown=&quot;1&quot;&gt;Get a sample chapter from Python Tricks: The Book&lt;/a&gt; that shows you Python‚Äôs best practices with simple examples you can apply instantly to write more beautiful + Pythonic code.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;why-would-you-learn-python&quot;&gt;Why Would You Learn Python?&lt;a class=&quot;headerlink&quot; href=&quot;#why-would-you-learn-python&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You might be completely new to programming and on the fence about whether or not you should invest your time into learning Python. In this first section, you‚Äôll think about the different reasons people want to learn this programming language. Take note of the one you identify with the most:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Career and job opportunities:&lt;/strong&gt; Maybe you want to start a new career as a software developer. Maybe you want to keep working at your current company and transition into a more technical role, such as data analysis. Programming proficiency is an excellent addition to any skill set you already have. Once you have the Python skills you need, you can ace your &lt;a href=&quot;https://realpython.com/learning-paths/python-interview/&quot;&gt;Python coding interview&lt;/a&gt; to get your dream job.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Automation:&lt;/strong&gt; Python can help you automate repetitive tasks that you regularly do in your job and private life. You could learn to automate your work with &lt;a href=&quot;https://realpython.com/openpyxl-excel-spreadsheets-python/&quot;&gt;Excel spreadsheets&lt;/a&gt;, &lt;a href=&quot;https://realpython.com/beautiful-soup-web-scraper-python/&quot;&gt;build a web scraper&lt;/a&gt; to access public data from the Internet, create &lt;a href=&quot;https://realpython.com/command-line-interfaces-python-argparse/&quot;&gt;command-line interfaces&lt;/a&gt;, or build bots for &lt;a href=&quot;https://realpython.com/twitter-bot-python-tweepy/&quot;&gt;Twitter&lt;/a&gt; or &lt;a href=&quot;https://realpython.com/how-to-make-a-discord-bot-python/&quot;&gt;Discord&lt;/a&gt; that take work off your plate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Curiosity:&lt;/strong&gt; Digital products are everywhere, and you probably use them daily. You might want to know how your digital thermometer works, how a popular website is built, or how your favorite computer game would look if you digitally took it apart.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Creativity:&lt;/strong&gt; You might have some fantastic ideas for your own games, and you could build them &lt;a href=&quot;https://realpython.com/platformer-python-arcade/&quot;&gt;with Arcade&lt;/a&gt; or &lt;a href=&quot;https://realpython.com/asteroids-game-python/&quot;&gt;with Pygame&lt;/a&gt;. Or you may want to get started with &lt;a href=&quot;https://realpython.com/micropython/&quot;&gt;programming hardware&lt;/a&gt; for home automation, Internet of Things (IoT), or &lt;a href=&quot;https://realpython.com/embedded-python/&quot;&gt;embedded game development&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of these are great reasons to get into programming! Your personal motivation for starting on this journey will affect how fast and how deeply you‚Äôll learn Python. It‚Äôll also influence which aspects of the language will require your focus. If you‚Äôre looking for inspiration on topics to tackle, then you can read about &lt;a href=&quot;https://realpython.com/what-can-i-do-with-python/&quot;&gt;what you can do with Python&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;what-does-learning-python-mean&quot;&gt;What Does ‚ÄúLearning Python‚Äù Mean?&lt;a class=&quot;headerlink&quot; href=&quot;#what-does-learning-python-mean&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Learning Python means more than just learning the Python programming language. You‚Äôll need to know more than just the specifics of a single programming language to do something useful with your programming skills. At the same time, you don‚Äôt need to understand every single aspect of Python to be productive.&lt;/p&gt;
&lt;p&gt;Learning Python is about learning how to accomplish practical tasks with Python programming. It‚Äôs about a skill set that you can use to build projects for yourself or an employer.&lt;/p&gt;
&lt;h2 id=&quot;how-can-you-measure-your-learning-progress&quot;&gt;How Can You Measure Your Learning Progress?&lt;a class=&quot;headerlink&quot; href=&quot;#how-can-you-measure-your-learning-progress&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It‚Äôs often hard to say at what point you‚Äôve fully learned something. Do you know Python when you know its syntax? Have you learned it when you know how to use a popular library without looking it up online? Or do you need to know all the ins and outs of the Python ecosystem to be able to say that you‚Äôve learned Python?&lt;/p&gt;
&lt;p&gt;Realistically, you‚Äôll probably never learn all there is to know about the Python ecosystem. There‚Äôs too much to know! Therefore, it‚Äôs helpful to separate your journey into different segments. This approach makes it easier for you to keep moving in the right direction.&lt;/p&gt;
&lt;p&gt;When you think about different skill levels, you might think of three traditional categories:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Beginner&lt;/li&gt;
&lt;li&gt;Intermediate&lt;/li&gt;
&lt;li&gt;Expert&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;However, it‚Äôs hard to define when someone stops being a beginner, and even experienced programmers often don‚Äôt consider themselves experts. On the other hand, some programmers with low ability may think of themselves as experts, a cognitive bias known as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Dunning%E2%80%93Kruger_effect&quot;&gt;Dunning-Kruger effect&lt;/a&gt;. With that in mind, mapping out your progress following this type of traditional classification might not be that useful for you.&lt;/p&gt;
&lt;h3 id=&quot;the-four-stages-of-competence&quot;&gt;The Four Stages of Competence&lt;a class=&quot;headerlink&quot; href=&quot;#the-four-stages-of-competence&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Instead, you‚Äôll use a different framework that  follows the &lt;a href=&quot;https://en.wikipedia.org/wiki/Four_stages_of_competence&quot;&gt;four stages of competence&lt;/a&gt; for assessing your learning progress:&lt;/p&gt;
&lt;figure class=&quot;js-lightbox&quot;&gt;&lt;a href=&quot;https://files.realpython.com/media/four-stages.d678c620edb0.png&quot; target=&quot;_blank&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;img-fluid mx-auto d-block &quot; src=&quot;https://files.realpython.com/media/four-stages.d678c620edb0.png&quot; width=&quot;3356&quot; height=&quot;619&quot; srcset=&quot;https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/four-stages.d678c620edb0.png&amp;amp;w=839&amp;amp;sig=a4ced5af7d8b46818ad2430bc0b6820918551b52 839w, https://robocrop.realpython.net/?url=https%3A//files.realpython.com/media/four-stages.d678c620edb0.png&amp;amp;w=1678&amp;amp;sig=0dfa356d24bba0243aba26d810cf68f637f28c1a 1678w, https://files.realpython.com/media/four-stages.d678c620edb0.png 3356w&quot; sizes=&quot;75vw&quot; alt=&quot;The four stages of competence&quot; data-asset=&quot;3761&quot;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;To make the four stages of competence more accessible, you‚Äôll see the following short names to refer to each of the four stages:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Unawareness&lt;/strong&gt; for &lt;strong&gt;unconscious incompetence&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Awareness&lt;/strong&gt; for &lt;strong&gt;conscious incompetence&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ability&lt;/strong&gt; for &lt;strong&gt;conscious competence&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Expertise&lt;/strong&gt; for &lt;strong&gt;unconscious competence&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/how-long-does-it-take-to-learn-python/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/how-long-does-it-take-to-learn-python/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #76: Harnessing Python&#x27;s math Module and Exposing Practical Pandas Functions</title>
      <id>https://realpython.com/podcasts/rpp/76/</id>
      <link href="https://realpython.com/podcasts/rpp/76/"/>
      <updated>2021-09-03T12:00:00+00:00</updated>
      <summary>How well do you know Python&#x27;s math module? Maybe you&#x27;ve used a few of the constants or arithmetic functions. You may be surprised by the amount of functionality hiding within this built-in library, and perhaps you don&#x27;t need to reach for an additional outside library. This week on the show, David Amos is back, and he&#x27;s brought another batch of PyCoder&#x27;s Weekly articles and projects.</summary>
      <content type="html">
        &lt;p&gt;How well do you know Python&#x27;s math module? Maybe you&#x27;ve used a few of the constants or arithmetic functions. You may be surprised by the amount of functionality hiding within this built-in library, and perhaps you don&#x27;t need to reach for an additional outside library. This week on the show, David Amos is back, and he&#x27;s brought another batch of PyCoder&#x27;s Weekly articles and projects.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Splitting Datasets With scikit-learn and train_test_split()</title>
      <id>https://realpython.com/courses/splitting-datasets-scikit-learn-train-test-split/</id>
      <link href="https://realpython.com/courses/splitting-datasets-scikit-learn-train-test-split/"/>
      <updated>2021-08-31T14:00:00+00:00</updated>
      <summary>In this course, you&#x27;ll learn why it&#x27;s important to split your dataset in supervised machine learning and how to do that with train_test_split() from scikit-learn.</summary>
      <content type="html">
        &lt;p&gt;One of the key aspects of supervised &lt;a href=&quot;https://realpython.com/learning-paths/machine-learning-python/&quot;&gt;machine learning&lt;/a&gt; is model evaluation and validation. When you evaluate the predictive performance of your model, it&amp;rsquo;s essential that the process be unbiased. Using &lt;a href=&quot;https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html&quot;&gt;&lt;strong&gt;&lt;code&gt;train_test_split()&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; from the data science library &lt;a href=&quot;https://scikit-learn.org/stable/index.html&quot;&gt;scikit-learn&lt;/a&gt;, you can split your dataset into subsets that minimize the potential for bias in your evaluation and validation process.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this course, you&amp;rsquo;ll learn:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Why you need to &lt;strong&gt;split your dataset&lt;/strong&gt; in supervised machine learning&lt;/li&gt;
&lt;li&gt;Which &lt;strong&gt;subsets&lt;/strong&gt; of the dataset you need for an unbiased evaluation of your model&lt;/li&gt;
&lt;li&gt;How to use &lt;strong&gt;&lt;code&gt;train_test_split()&lt;/code&gt;&lt;/strong&gt; to split your data&lt;/li&gt;
&lt;li&gt;How to combine &lt;code&gt;train_test_split()&lt;/code&gt; with &lt;strong&gt;prediction methods&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition, you&amp;rsquo;ll get information on related tools from &lt;a href=&quot;https://scikit-learn.org/stable/modules/classes.html#module-sklearn.model_selection&quot;&gt;&lt;code&gt;sklearn.model_selection&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Using Python Optional Arguments When Defining Functions</title>
      <id>https://realpython.com/python-optional-arguments/</id>
      <link href="https://realpython.com/python-optional-arguments/"/>
      <updated>2021-08-30T14:00:00+00:00</updated>
      <summary>In this tutorial, you&#x27;ll learn about Python optional arguments and how to define functions with default values. You&#x27;ll also learn how to create functions that accept any number of arguments using args and kwargs.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;Defining your own functions is an essential skill for writing clean and effective code. In this tutorial, you‚Äôll explore the techniques you have available for defining Python functions that take optional arguments. When you master Python optional arguments, you‚Äôll be able to define functions that are more powerful and more flexible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this tutorial, you‚Äôll learn:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What the difference is between &lt;strong&gt;parameters&lt;/strong&gt; and &lt;strong&gt;arguments&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;How to define functions with &lt;strong&gt;optional arguments&lt;/strong&gt; and &lt;strong&gt;default parameter values&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;How to define functions using &lt;strong&gt;&lt;code&gt;args&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;kwargs&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;How to deal with &lt;strong&gt;error messages&lt;/strong&gt; about optional arguments&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get the most out of this tutorial, you‚Äôll need some familiarity with &lt;a href=&quot;https://realpython.com/defining-your-own-python-function/&quot;&gt;defining functions&lt;/a&gt; with required arguments.&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;&lt;p&gt;&lt;strong&gt;Free Bonus:&lt;/strong&gt; &lt;a href=&quot;&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-python-cheat-sheet-shortened&quot; data-focus=&quot;false&quot;&gt;Click here to get a Python Cheat Sheet&lt;/a&gt; and learn the basics of Python 3, like working with data types, dictionaries, lists, and Python functions.&lt;/p&gt;&lt;/div&gt;

&lt;h2 id=&quot;creating-functions-in-python-for-reusing-code&quot;&gt;Creating Functions in Python for Reusing Code&lt;a class=&quot;headerlink&quot; href=&quot;#creating-functions-in-python-for-reusing-code&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can think of a function as a mini-program that runs within another program or within another function. The main program calls the mini-program and sends information that the mini-program will need as it runs. When the function completes all of its actions, it may send some data back to the main program that has called it.&lt;/p&gt;
&lt;p&gt;The primary purpose of a function is to allow you to reuse the code within it whenever you need it, using different inputs if required.&lt;/p&gt;
&lt;p&gt;When you use functions, you are extending your Python vocabulary. This lets you express the solution to your problem in a clearer and more succinct way.&lt;/p&gt;
&lt;p&gt;In Python, by convention, you should name a function using lowercase letters with words separated by an underscore, such as &lt;code&gt;do_something()&lt;/code&gt;. These conventions are described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/&quot;&gt;PEP 8&lt;/a&gt;, which is Python‚Äôs style guide. You‚Äôll need to add parentheses after the function name when you call it. Since functions represent actions, it‚Äôs a best practice to start your function names with a verb to make your code more readable.&lt;/p&gt;
&lt;h3 id=&quot;defining-functions-with-no-input-parameters&quot;&gt;Defining Functions With No Input Parameters&lt;a class=&quot;headerlink&quot; href=&quot;#defining-functions-with-no-input-parameters&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In this tutorial, you‚Äôll use the example of a basic program that creates and maintains a shopping list and &lt;a href=&quot;https://realpython.com/python-print/&quot;&gt;prints it out&lt;/a&gt; when you‚Äôre ready to go to the supermarket.&lt;/p&gt;
&lt;p&gt;Start by creating a shopping list:&lt;/p&gt;
&lt;div class=&quot;highlight python&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;shopping_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Bread&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Milk&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Chocolate&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Butter&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Coffee&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You‚Äôre using a &lt;a href=&quot;https://realpython.com/python-dicts/&quot;&gt;dictionary&lt;/a&gt; to store the item name as the key and the quantity you need to buy of each item as the value. You can define a function to display the shopping list:&lt;/p&gt;
&lt;div class=&quot;highlight python&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# optional_params.py&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;shopping_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Bread&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Milk&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Chocolate&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Butter&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;Coffee&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;show_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quantity&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shopping_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;quantity&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;x &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;show_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you run this script, you‚Äôll get a printout of the shopping list:&lt;/p&gt;
&lt;div class=&quot;highlight sh&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python optional_params.py
&lt;span class=&quot;go&quot;&gt;1x Bread&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2x Milk&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;1x Chocolate&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;1x Butter&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;1x Coffee&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The function you‚Äôve defined has no input parameters as the parentheses in the function &lt;strong&gt;signature&lt;/strong&gt; are empty. The signature is the first line in the function definition:&lt;/p&gt;
&lt;div class=&quot;highlight python&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;show_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You don‚Äôt need any input parameters in this example since the dictionary &lt;code&gt;shopping_list&lt;/code&gt; is a &lt;strong&gt;global variable&lt;/strong&gt;. This means that it can be accessed from everywhere in the program, including from within the function definition. This is called the &lt;strong&gt;global scope&lt;/strong&gt;. You can read more about scope in &lt;a href=&quot;https://realpython.com/python-scope-legb-rule/&quot;&gt;Python Scope &amp;amp; the LEGB Rule: Resolving Names in Your Code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Using global variables in this way is not a good practice. It can lead to several functions making changes to the same data structure, which can lead to bugs that are hard to find. You‚Äôll see how to improve on this later on in this tutorial when you‚Äôll pass the dictionary to the function as an argument.&lt;/p&gt;
&lt;p&gt;In the next section, you‚Äôll define a function that has input parameters.&lt;/p&gt;
&lt;h3 id=&quot;defining-functions-with-required-input-arguments&quot;&gt;Defining Functions With Required Input Arguments&lt;a class=&quot;headerlink&quot; href=&quot;#defining-functions-with-required-input-arguments&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Instead of writing the shopping list directly in the code, you can now initialize an empty dictionary and write a function that allows you to add items to the shopping list:&lt;/p&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/python-optional-arguments/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/python-optional-arguments/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #75: Building With CircuitPython &amp; Constraints of Python for Microcontrollers</title>
      <id>https://realpython.com/podcasts/rpp/75/</id>
      <link href="https://realpython.com/podcasts/rpp/75/"/>
      <updated>2021-08-27T12:00:00+00:00</updated>
      <summary>Can you make a version of Python that fits within the memory constraints of a microcontroller and have it still feel like Python? That is the intention behind CircuitPython. This week on the show, we have Scott Shawcroft, who is the project lead for CircuitPython.</summary>
      <content type="html">
        &lt;p&gt;Can you make a version of Python that fits within the memory constraints of a microcontroller and have it still feel like Python? That is the intention behind CircuitPython. This week on the show, we have Scott Shawcroft, who is the project lead for CircuitPython.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Exploring the Python math Module</title>
      <id>https://realpython.com/courses/exploring-python-math-module/</id>
      <link href="https://realpython.com/courses/exploring-python-math-module/"/>
      <updated>2021-08-24T14:00:00+00:00</updated>
      <summary>In this step-by-step course, you‚Äôll learn all about Python‚Äôs math module for higher-level mathematical functions. Whether you‚Äôre working on a scientific project, a financial application, or any other type of programming endeavor, you just can‚Äôt escape the need for math!</summary>
      <content type="html">
        &lt;p&gt;In this course, you&amp;rsquo;ll learn all about Python&amp;rsquo;s &lt;strong&gt;&lt;code&gt;math&lt;/code&gt;&lt;/strong&gt; module. Mathematical calculations are an essential part of most Python development. Whether you&amp;rsquo;re working on a scientific project, a financial application, or any other type of programming endeavor, you just can&amp;rsquo;t escape the need for math.&lt;/p&gt;
&lt;p&gt;For straightforward mathematical calculations in Python, you can use the built-in mathematical &lt;strong&gt;operators&lt;/strong&gt;, such as addition (&lt;code&gt;+&lt;/code&gt;), subtraction (&lt;code&gt;-&lt;/code&gt;), division (&lt;code&gt;/&lt;/code&gt;), and multiplication (&lt;code&gt;*&lt;/code&gt;). But more advanced operations, such as exponential, logarithmic, trigonometric, or power functions, are not built in. Does that mean you need to implement all of these functions from scratch?&lt;/p&gt;
&lt;p&gt;Fortunately, no. Python provides a &lt;a href=&quot;https://realpython.com/python-modules-packages/&quot;&gt;module&lt;/a&gt; specifically designed for higher-level mathematical operations: the &lt;code&gt;math&lt;/code&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;By the end of this course, you&amp;rsquo;ll learn:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What the Python &lt;code&gt;math&lt;/code&gt; module is&lt;/li&gt;
&lt;li&gt;How to use &lt;code&gt;math&lt;/code&gt; module functions to solve real-life problems&lt;/li&gt;
&lt;li&gt;What the constants of the &lt;code&gt;math&lt;/code&gt; module are, including pi, tau, and Euler&amp;rsquo;s number&lt;/li&gt;
&lt;li&gt;What the differences between built-in functions and &lt;code&gt;math&lt;/code&gt; functions are&lt;/li&gt;
&lt;li&gt;What the differences between &lt;code&gt;math&lt;/code&gt;, &lt;code&gt;cmath&lt;/code&gt;, and NumPy are&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A background in mathematics will be helpful here, but don&amp;rsquo;t worry if math isn&amp;rsquo;t your strong suit. This course will explain the basics of everything you need to know.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Python&#x27;s deque: Implement Efficient Queues and Stacks</title>
      <id>https://realpython.com/python-deque/</id>
      <link href="https://realpython.com/python-deque/"/>
      <updated>2021-08-23T14:00:00+00:00</updated>
      <summary>In this step-by-step tutorial, you&#x27;ll learn about Python&#x27;s deque and how to use it to perform efficient pop and append operations on both ends of your sequences. Deques are commonly used to build queues and stacks.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;If you often work with lists in Python, then you probably know that they don‚Äôt perform fast enough when you need to &lt;strong&gt;pop&lt;/strong&gt; and &lt;strong&gt;append&lt;/strong&gt; items on their left end. Python‚Äôs &lt;a href=&quot;https://docs.python.org/3/library/collections.html#module-collections&quot;&gt;&lt;code&gt;collections&lt;/code&gt;&lt;/a&gt; module provides a class called &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.deque&quot;&gt;&lt;code&gt;deque&lt;/code&gt;&lt;/a&gt; that‚Äôs specially designed to provide fast and memory-efficient ways to append and pop item from both ends of the underlying data structure.&lt;/p&gt;
&lt;p&gt;Python‚Äôs &lt;code&gt;deque&lt;/code&gt; is a low-level and highly optimized &lt;a href=&quot;https://en.wikipedia.org/wiki/Double-ended_queue&quot;&gt;double-ended queue&lt;/a&gt; that‚Äôs useful for implementing elegant, efficient, and Pythonic queues and stacks, which are the most common list-like data types in computing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this tutorial, you‚Äôll learn:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How to create and use Python‚Äôs &lt;strong&gt;&lt;code&gt;deque&lt;/code&gt;&lt;/strong&gt; in your code&lt;/li&gt;
&lt;li&gt;How to efficiently &lt;strong&gt;append&lt;/strong&gt; and &lt;strong&gt;pop&lt;/strong&gt; items from both ends of a &lt;code&gt;deque&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;How to use &lt;code&gt;deque&lt;/code&gt; to build efficient &lt;strong&gt;queues&lt;/strong&gt; and &lt;strong&gt;stacks&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;When it‚Äôs worth using &lt;strong&gt;&lt;code&gt;deque&lt;/code&gt;&lt;/strong&gt; instead of &lt;strong&gt;&lt;code&gt;list&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To better understand these topics, you should know the basics of working with Python &lt;a href=&quot;https://realpython.com/python-lists-tuples/&quot;&gt;lists&lt;/a&gt;. It‚Äôll also be beneficial for you to have a general understanding of &lt;a href=&quot;https://realpython.com/python-data-structures/#queues-fifos&quot;&gt;queues&lt;/a&gt; and &lt;a href=&quot;https://realpython.com/how-to-implement-python-stack/&quot;&gt;stacks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finally, you‚Äôll write a few examples that walk you through some common use cases of &lt;code&gt;deque&lt;/code&gt;, which is one of Python‚Äôs most powerful data types.&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong markdown=&quot;1&quot;&gt;Free Download:&lt;/strong&gt; &lt;a href=&quot;https://realpython.com/bonus/python-tricks-sample-pdf/&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-python-tricks-sample-pdf&quot; data-focus=&quot;false&quot; markdown=&quot;1&quot;&gt;Get a sample chapter from Python Tricks: The Book&lt;/a&gt; that shows you Python‚Äôs best practices with simple examples you can apply instantly to write more beautiful + Pythonic code.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;getting-started-with-pythons-deque&quot;&gt;Getting Started With Python‚Äôs &lt;code&gt;deque&lt;/code&gt;&lt;a class=&quot;headerlink&quot; href=&quot;#getting-started-with-pythons-deque&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Appending items to and popping them from the right end of a Python list are normally efficient operations. If you use the &lt;a href=&quot;https://en.wikipedia.org/wiki/Big_O_notation&quot;&gt;Big O notation&lt;/a&gt; for &lt;a href=&quot;https://wiki.python.org/moin/TimeComplexity&quot;&gt;time complexity&lt;/a&gt;, then you can say that they‚Äôre &lt;em&gt;O&lt;/em&gt;(1). However, when Python needs to reallocate memory to grow the underlying list for accepting new items, these operations are slower and can become &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Additionally, appending and popping items on the left end of a Python list are known to be inefficient operations with &lt;em&gt;O&lt;/em&gt;(&lt;em&gt;n&lt;/em&gt;) speed.&lt;/p&gt;
&lt;p&gt;Since Python lists provide both operations with &lt;a href=&quot;https://realpython.com/python-append/&quot;&gt;&lt;code&gt;.append()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;.pop()&lt;/code&gt;, they‚Äôre usable as &lt;a href=&quot;https://en.wikipedia.org/wiki/Stack_(abstract_data_type)&quot;&gt;stacks&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Queue_(abstract_data_type)&quot;&gt;queues&lt;/a&gt;. However, the performance issues you saw before can significantly affect the overall performance of your applications.&lt;/p&gt;
&lt;p&gt;Python‚Äôs &lt;a href=&quot;https://docs.python.org/3/library/collections.html?highlight=collections#collections.deque&quot;&gt;&lt;code&gt;deque&lt;/code&gt;&lt;/a&gt; was the first data type added to the &lt;a href=&quot;https://realpython.com/python-collections-module/&quot;&gt;&lt;code&gt;collections&lt;/code&gt;&lt;/a&gt; module back in &lt;a href=&quot;https://docs.python.org/3/whatsnew/2.4.html#new-improved-and-deprecated-modules&quot;&gt;Python 2.4&lt;/a&gt;. This data type was specially designed to overcome the efficiency problems of &lt;code&gt;.append()&lt;/code&gt; and &lt;code&gt;.pop()&lt;/code&gt; in Python list.&lt;/p&gt;
&lt;p&gt;Deques are sequence-like data types designed as a generalization of &lt;strong&gt;stacks&lt;/strong&gt; and &lt;strong&gt;queues&lt;/strong&gt;. They support memory-efficient and fast append and pop operations on both ends of the data structure.&lt;/p&gt;
&lt;div class=&quot;alert alert-primary&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;deque&lt;/code&gt; is pronounced as ‚Äúdeck.‚Äù The name stands for &lt;a href=&quot;https://en.wikipedia.org/wiki/Double-ended_queue&quot;&gt;&lt;strong&gt;d&lt;/strong&gt;ouble-&lt;strong&gt;e&lt;/strong&gt;nded &lt;strong&gt;que&lt;/strong&gt;ue&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Append and pop operations on both ends of a &lt;code&gt;deque&lt;/code&gt; object are stable and equally efficient because deques are &lt;a href=&quot;https://github.com/python/cpython/blob/23acadcc1c75eb74b2459304af70d97a35001b34/Modules/_collectionsmodule.c#L34&quot;&gt;implemented&lt;/a&gt; as a &lt;a href=&quot;https://realpython.com/linked-lists-python/#how-to-use-doubly-linked-lists&quot;&gt;doubly linked list&lt;/a&gt;. Additionally, append and pop operations on deques are also &lt;a href=&quot;https://en.wikipedia.org/wiki/Thread_safety&quot;&gt;thread safe&lt;/a&gt; and memory efficient. These features make deques particularly useful for creating custom stacks and queues in Python.&lt;/p&gt;
&lt;p&gt;Deques are also the way to go if you need to keep a list of last-seen items because you can restrict the maximum length of your deques. If you do so, then once a deque is full, it automatically discards items from one end when you append new items on the opposite end.&lt;/p&gt;
&lt;p&gt;Here‚Äôs a summary of the main characteristics of &lt;code&gt;deque&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Stores items of any &lt;a href=&quot;https://realpython.com/python-data-types/&quot;&gt;data type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Is a &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-mutable&quot;&gt;mutable&lt;/a&gt; data type&lt;/li&gt;
&lt;li&gt;Supports &lt;a href=&quot;https://realpython.com/python-boolean/#the-in-operator&quot;&gt;membership operations&lt;/a&gt; with the &lt;code&gt;in&lt;/code&gt; operator&lt;/li&gt;
&lt;li&gt;Supports &lt;a href=&quot;https://realpython.com/python-lists-tuples/#list-elements-can-be-accessed-by-index&quot;&gt;indexing&lt;/a&gt;, like in &lt;code&gt;a_deque[i]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Doesn‚Äôt support slicing, like in &lt;code&gt;a_deque[0:2]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Supports built-in functions that operate on sequences and iterables, such as &lt;a href=&quot;https://docs.python.org/3/library/functions.html#len&quot;&gt;&lt;code&gt;len()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://realpython.com/python-sort/&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://realpython.com/python-reverse-list/&quot;&gt;&lt;code&gt;reversed()&lt;/code&gt;&lt;/a&gt;, and more&lt;/li&gt;
&lt;li&gt;Doesn‚Äôt support &lt;a href=&quot;https://en.wikipedia.org/wiki/In-place_algorithm&quot;&gt;in-place&lt;/a&gt; sorting&lt;/li&gt;
&lt;li&gt;Supports normal and reverse iteration&lt;/li&gt;
&lt;li&gt;Supports pickling with &lt;a href=&quot;https://realpython.com/python-pickle-module/&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ensures fast, memory-efficient, and thread-safe pop and append operations on both ends&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Creating &lt;code&gt;deque&lt;/code&gt; instances is a straightforward process. You just need to import &lt;code&gt;deque&lt;/code&gt; from &lt;code&gt;collections&lt;/code&gt; and call it with an optional &lt;code&gt;iterable&lt;/code&gt; as an argument:&lt;/p&gt;
&lt;div class=&quot;highlight python repl&quot;&gt;&lt;span class=&quot;repl-toggle&quot; title=&quot;Toggle REPL prompts and output&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deque&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Create an empty deque&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deque&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;deque([])&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Use different iterables to create deques&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deque&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;deque([1, 2, 3, 4])&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deque&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;deque([1, 2, 3, 4])&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deque&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;deque([1, 2, 3, 4])&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deque&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;abcd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;deque([&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;])&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;two&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;three&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;four&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deque&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;deque([&#x27;one&#x27;, &#x27;two&#x27;, &#x27;three&#x27;, &#x27;four&#x27;])&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deque&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;deque([1, 2, 3, 4])&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deque&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;deque([(&#x27;one&#x27;, 1), (&#x27;two&#x27;, 2), (&#x27;three&#x27;, 3), (&#x27;four&#x27;, 4)])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you instantiate &lt;code&gt;deque&lt;/code&gt; without providing an &lt;code&gt;iterable&lt;/code&gt; as an argument, then you get an empty deque. If you provide and input &lt;code&gt;iterable&lt;/code&gt;, then &lt;code&gt;deque&lt;/code&gt; initializes the new instance with data from it. The initialization goes from left to right using &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.deque.append&quot;&gt;&lt;code&gt;deque.append()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;deque&lt;/code&gt; initializer takes the following two optional arguments:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;iterable&lt;/code&gt;&lt;/strong&gt; holds an iterable that provides the initialization data.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;maxlen&lt;/code&gt;&lt;/strong&gt; holds an integer &lt;a href=&quot;https://realpython.com/python-numbers/&quot;&gt;number&lt;/a&gt; that specifies the maximum length of the deque.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As mentioned previously, if you don‚Äôt supply an &lt;code&gt;iterable&lt;/code&gt;, then you get an empty deque. If you supply a value to &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.deque.maxlen&quot;&gt;&lt;code&gt;maxlen&lt;/code&gt;&lt;/a&gt;, then your deque will only store up to &lt;code&gt;maxlen&lt;/code&gt; items.&lt;/p&gt;
&lt;p&gt;Finally, you can also use unordered iterables, such as &lt;a href=&quot;https://realpython.com/python-sets/&quot;&gt;sets&lt;/a&gt;, to initialize your deques. In those cases, you won‚Äôt have a predefined order for the items in the final deque.&lt;/p&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/python-deque/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/python-deque/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #74: Python&#x27;s Assignment Expressions and Fixing a Botched Release to PyPI</title>
      <id>https://realpython.com/podcasts/rpp/74/</id>
      <link href="https://realpython.com/podcasts/rpp/74/"/>
      <updated>2021-08-20T12:00:00+00:00</updated>
      <summary>Have you started to use Python&#x27;s assignment expression in your code? Maybe you have heard them called the walrus operator. Now that the controversy over the introduction in Python 3.8 has settled down, how can you use assignment expressions effectively in your code? This week on the show, David Amos is back, and he&#x27;s brought another batch of PyCoder&#x27;s Weekly articles and projects.</summary>
      <content type="html">
        &lt;p&gt;Have you started to use Python&#x27;s assignment expression in your code? Maybe you have heard them called the walrus operator. Now that the controversy over the introduction in Python 3.8 has settled down, how can you use assignment expressions effectively in your code? This week on the show, David Amos is back, and he&#x27;s brought another batch of PyCoder&#x27;s Weekly articles and projects.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Reading and Writing Files With Pandas</title>
      <id>https://realpython.com/courses/reading-writing-files-pandas/</id>
      <link href="https://realpython.com/courses/reading-writing-files-pandas/"/>
      <updated>2021-08-17T14:00:00+00:00</updated>
      <summary>In this course, you&#x27;ll learn about the Pandas IO tools API and how you can use it to read and write files. You&#x27;ll use the Pandas read_csv() function to work with CSV files. You&#x27;ll also cover similar methods for efficiently working with Excel, CSV, JSON, HTML, SQL, pickle, and big data files.</summary>
      <content type="html">
        &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://pandas.pydata.org/&quot;&gt;Pandas&lt;/a&gt;&lt;/strong&gt; is a powerful and flexible Python package that allows you to work with labeled and time series data. It also provides &lt;a href=&quot;https://realpython.com/python-statistics/&quot;&gt;statistics&lt;/a&gt; methods, enables plotting, and more. One crucial feature of Pandas is its ability to write and read Excel, CSV, and many other types of files. Functions like the Pandas &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html&quot;&gt;&lt;code&gt;read_csv()&lt;/code&gt;&lt;/a&gt; method enable you to work with files effectively. You can use them to save the data and labels from Pandas objects to a file and load them later as Pandas &lt;code&gt;Series&lt;/code&gt; or &lt;a href=&quot;https://realpython.com/pandas-dataframe/&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; instances.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this course, you&amp;rsquo;ll learn:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What the &lt;strong&gt;Pandas IO tools&lt;/strong&gt; API is&lt;/li&gt;
&lt;li&gt;How to &lt;strong&gt;read and write data&lt;/strong&gt; to and from files&lt;/li&gt;
&lt;li&gt;How to use the methods of &lt;strong&gt;read_csv()&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;How to work with various &lt;strong&gt;file formats&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;How to work with &lt;strong&gt;big data&lt;/strong&gt; efficiently&lt;/li&gt;
&lt;/ul&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Python News: What&#x27;s New From July 2021?</title>
      <id>https://realpython.com/python-news-july-2021/</id>
      <link href="https://realpython.com/python-news-july-2021/"/>
      <updated>2021-08-16T14:00:00+00:00</updated>
      <summary>The Python community saw some great changes in July 2021. In this article, you&#x27;ll get up to speed on the big-ticket items that happened this past month, including some news about the CPython Developer-in-Residence position at the Python Software Foundation.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;&lt;strong&gt;July 2021&lt;/strong&gt; was an exciting month for the Python community! The Python Software Foundation hired the first-ever &lt;strong&gt;CPython Developer-in-Residence&lt;/strong&gt;‚Äîa full-time paid position devoted to CPython development. In other news from the CPython developer team, &lt;a href=&quot;https://realpython.com/python-traceback/&quot;&gt;tracebacks&lt;/a&gt; and &lt;strong&gt;error messages&lt;/strong&gt; got some much-needed attention.&lt;/p&gt;
&lt;p&gt;Let‚Äôs dive into the biggest &lt;strong&gt;Python news&lt;/strong&gt; from the past month!&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;&lt;p&gt;&lt;strong&gt;Free Bonus:&lt;/strong&gt; &lt;a href=&quot;&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-python-cheat-sheet-shortened&quot; data-focus=&quot;false&quot;&gt;Click here to get a Python Cheat Sheet&lt;/a&gt; and learn the basics of Python 3, like working with data types, dictionaries, lists, and Python functions.&lt;/p&gt;&lt;/div&gt;

&lt;h2 id=&quot;cpython-has-a-full-time-developer-in-residence&quot;&gt;CPython Has a Full-Time Developer-in-Residence&lt;a class=&quot;headerlink&quot; href=&quot;#cpython-has-a-full-time-developer-in-residence&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In our &lt;a href=&quot;https://realpython.com/python-news-june-2021&quot;&gt;June news roundup&lt;/a&gt;, we featured the Python Software Foundation‚Äôs announcement that they were hiring a CPython Developer-in-Residence. In July, the PSF‚Äôs plans came to fruition with the hiring of ≈Åukasz Langa.&lt;/p&gt;
&lt;p&gt;≈Åukasz, a CPython core developer and active member of the Python community, may be familiar to &lt;em&gt;Real Python&lt;/em&gt; readers. In Episode 7 of the &lt;a href=&quot;https://realpython.com/podcasts/rpp/7/&quot;&gt;Real Python Podcast&lt;/a&gt;, ≈Åukasz joined host &lt;a href=&quot;https://realpython.com/team/cbailey/&quot;&gt;Chris Bailey&lt;/a&gt; to talk about the origins of the &lt;a href=&quot;https://black.readthedocs.io/en/stable/&quot;&gt;Black&lt;/a&gt; code formatter, his experience as the Python release manager for Python 3.8 and 3.9, and how he melds Python with &lt;a href=&quot;https://www.youtube.com/watch?v=02CLD-42VdI&quot;&gt;his interest in music&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As the first CPython Developer-in-Residence, ≈Åukasz is responsible for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Addressing pull requests and issue backlog&lt;/li&gt;
&lt;li&gt;Performing analytical research to understand volunteer hours and funding for CPython&lt;/li&gt;
&lt;li&gt;Investigating project priorities and their tasks going forward&lt;/li&gt;
&lt;li&gt;Working on project priorities&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In ≈Åukasz‚Äôs statement about his new role, he describes his reaction to the announcement that the PSF was hiring:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When the PSF first announced the Developer in Residence position, I was immediately incredibly hopeful for Python. I think it‚Äôs a role with transformational potential for the project. In short, I believe the mission of the Developer in Residence (DIR) is to accelerate the developer experience of everybody else. This includes not only the core development team, but most importantly the drive-by contributors submitting pull requests and creating issues on the tracker. (&lt;a href=&quot;https://lukasz.langa.pl/a072a74b-19d7-41ff-a294-e6b1319fdb6e/&quot;&gt;Source&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;≈Åukasz maintains a log of his work each week in a &lt;a href=&quot;https://lukasz.langa.pl/python/developer-in-residence/&quot;&gt;series of weekly reports&lt;/a&gt; on his personal website. During his first week on the job, he closed fourteen issues and fifty-four pull requests (PRs), reviewed nine PRs, and authored six of his own PRs.&lt;/p&gt;
&lt;p&gt;‚ÄúDon‚Äôt get too excited though about those numbers,‚Äù ≈Åukasz writes in his &lt;a href=&quot;https://lukasz.langa.pl/1c78554f-f81d-43d0-9c89-a602cafc4c5a/&quot;&gt;first weekly report&lt;/a&gt;. ‚ÄúThe way CPython is developed, many changes start on the &lt;code&gt;main&lt;/code&gt; branch, and then get back ported to [Python] 3.10 and often also to 3.9. So some changes are tripled in those stats.‚Äù&lt;/p&gt;
&lt;p&gt;The transparency that the weekly reports offer is refreshing and provides a unique look behind the scenes of the role. Future applicants will have a fantastic resource to help them understand what the job entails, what is working well, and where improvements can be made.&lt;/p&gt;
&lt;p&gt;≈Åukasz wrote two weekly reports in July:&lt;/p&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/python-news-july-2021/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/python-news-july-2021/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #73: Supporting Python Open Source Projects and Maintainers</title>
      <id>https://realpython.com/podcasts/rpp/73/</id>
      <link href="https://realpython.com/podcasts/rpp/73/"/>
      <updated>2021-08-13T12:00:00+00:00</updated>
      <summary>How do you define open source software? What are the challenges an open source project and maintainers face? How do maintainers receive financial, legal, security, or other types of help? This week on the show, we have Josh Simmons from Tidelift and the Open Source Initiative to help answer these questions.</summary>
      <content type="html">
        &lt;p&gt;How do you define open source software? What are the challenges an open source project and maintainers face? How do maintainers receive financial, legal, security, or other types of help? This week on the show, we have Josh Simmons from Tidelift and the Open Source Initiative to help answer these questions.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Using the Python return Statement Effectively</title>
      <id>https://realpython.com/courses/effective-python-return-statement/</id>
      <link href="https://realpython.com/courses/effective-python-return-statement/"/>
      <updated>2021-08-10T14:00:00+00:00</updated>
      <summary>In this step-by-step course, you&#x27;ll learn how to use the Python return statement when writing functions. Additionally, you&#x27;ll cover some good programming practices related to the use of return. With this knowledge, you&#x27;ll be able to write readable, robust, and maintainable functions in Python.</summary>
      <content type="html">
        &lt;p&gt;The Python &lt;a href=&quot;https://en.wikipedia.org/wiki/Return_statement&quot;&gt;&lt;code&gt;return&lt;/code&gt; statement&lt;/a&gt; is a key component of &lt;a href=&quot;https://realpython.com/defining-your-own-python-function/&quot;&gt;functions&lt;/a&gt; and &lt;a href=&quot;https://realpython.com/python3-object-oriented-programming/#instance-methods&quot;&gt;methods&lt;/a&gt;. You can use the &lt;code&gt;return&lt;/code&gt; statement to make your functions send Python objects back to the caller code. These objects are known as the function&amp;rsquo;s &lt;strong&gt;return value&lt;/strong&gt;. You can use them to perform further computation in your programs.&lt;/p&gt;
&lt;p&gt;Using the &lt;code&gt;return&lt;/code&gt; statement effectively is a core skill if you want to code custom functions that are &lt;a href=&quot;https://realpython.com/learning-paths/writing-pythonic-code/&quot;&gt;Pythonic&lt;/a&gt; and robust.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this course, you&amp;rsquo;ll learn:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How to use the &lt;strong&gt;Python &lt;code&gt;return&lt;/code&gt; statement&lt;/strong&gt; in your functions&lt;/li&gt;
&lt;li&gt;How to return &lt;strong&gt;single&lt;/strong&gt; or &lt;strong&gt;multiple values&lt;/strong&gt; from your functions&lt;/li&gt;
&lt;li&gt;What &lt;strong&gt;best practices&lt;/strong&gt; to observe when using &lt;code&gt;return&lt;/code&gt; statements&lt;/li&gt;
&lt;li&gt;How to structure more &lt;strong&gt;advanced&lt;/strong&gt; return statements&lt;/li&gt;
&lt;/ul&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Walrus Operator: Python 3.8 Assignment Expressions</title>
      <id>https://realpython.com/python-walrus-operator/</id>
      <link href="https://realpython.com/python-walrus-operator/"/>
      <updated>2021-08-09T14:00:00+00:00</updated>
      <summary>In this tutorial, you&#x27;ll learn about assignment expressions and the walrus operator. The biggest change in Python 3.8 was the inclusion of the := operator, which you can use to assign variables in the middle of expressions. You&#x27;ll see several examples of how to take advantage of this new feature.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;Each new version of Python adds new features to the language. For Python 3.8, the biggest change is the addition of &lt;strong&gt;assignment expressions&lt;/strong&gt;. Specifically, the &lt;code&gt;:=&lt;/code&gt; operator gives you a new syntax for assigning variables in the middle of expressions. This operator is colloquially known as the &lt;strong&gt;walrus operator&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This tutorial is an in-depth introduction to the walrus operator. You will learn some of the motivations for the syntax update and explore some examples where assignment expressions can be useful.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this tutorial, you‚Äôll learn how to:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Identify &lt;strong&gt;the walrus operator&lt;/strong&gt; and understand its meaning&lt;/li&gt;
&lt;li&gt;Understand &lt;strong&gt;use cases&lt;/strong&gt; for the walrus operator&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Avoid repetitive code&lt;/strong&gt; by using the walrus operator&lt;/li&gt;
&lt;li&gt;Convert between code using the walrus operator and code using &lt;strong&gt;other assignment methods&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Understand the impacts on &lt;strong&gt;backward compatibility&lt;/strong&gt; when using the walrus operator&lt;/li&gt;
&lt;li&gt;Use appropriate &lt;strong&gt;style&lt;/strong&gt; in your assignment expressions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that all walrus operator examples in this tutorial require &lt;a href=&quot;https://realpython.com/python38-new-features/&quot;&gt;Python 3.8&lt;/a&gt; or later to work.&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong markdown=&quot;1&quot;&gt;Free Bonus:&lt;/strong&gt; &lt;a href=&quot;https://realpython.com/bonus/python-tricks-sample/&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-python-tricks-sample&quot; data-focus=&quot;false&quot; markdown=&quot;1&quot;&gt;Click here to get access to a chapter from Python Tricks: The Book&lt;/a&gt; that shows you Python‚Äôs best practices with simple examples you can apply instantly to write more beautiful + Pythonic code.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;walrus-operator-fundamentals&quot;&gt;Walrus Operator Fundamentals&lt;a class=&quot;headerlink&quot; href=&quot;#walrus-operator-fundamentals&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Let‚Äôs start with some different terms that programmers use to refer to this new syntax. You‚Äôve already seen a few in this tutorial. &lt;/p&gt;
&lt;p&gt;The &lt;code&gt;:=&lt;/code&gt; operator is officially known as the &lt;strong&gt;assignment expression operator&lt;/strong&gt;. During early discussions, it was dubbed the &lt;strong&gt;walrus operator&lt;/strong&gt; because the &lt;code&gt;:=&lt;/code&gt; syntax resembles the eyes and tusks of a sideways &lt;a href=&quot;https://en.wikipedia.org/wiki/Walrus&quot;&gt;walrus&lt;/a&gt;. You may also see the &lt;code&gt;:=&lt;/code&gt; operator referred to as the &lt;strong&gt;colon equals operator&lt;/strong&gt;. Yet another term used for assignment expressions is &lt;strong&gt;named expressions&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&quot;hello-walrus&quot;&gt;Hello, Walrus!&lt;a class=&quot;headerlink&quot; href=&quot;#hello-walrus&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To get a first impression of what assignment expressions are all about, start your REPL and play around with the following code:&lt;/p&gt;
&lt;div class=&quot;highlight python repl&quot;&gt;&lt;span class=&quot;repl-toggle&quot; title=&quot;Toggle REPL prompts and output&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;linenos&quot;&gt; 1&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;walrus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;False&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 2&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;walrus&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 3&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;False&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 4&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 5&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;walrus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 6&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 7&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;walrus&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 8&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Line 1 shows a traditional &lt;a href=&quot;https://docs.python.org/3/reference/simple_stmts.html#assignment-statements&quot;&gt;assignment statement&lt;/a&gt; where the value &lt;code&gt;False&lt;/code&gt; is assigned to &lt;code&gt;walrus&lt;/code&gt;. Next, on line 5, you use an assignment expression to assign the value &lt;code&gt;True&lt;/code&gt; to &lt;code&gt;walrus&lt;/code&gt;. After both lines 1 and 5, you can refer to the assigned values by using the variable name &lt;code&gt;walrus&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You might be wondering why you‚Äôre using parentheses on line 5, and you‚Äôll learn why the parentheses are needed &lt;a href=&quot;#walrus-operator-syntax&quot;&gt;later on in this tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;alert alert-primary&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; A &lt;strong&gt;statement&lt;/strong&gt; in Python is a unit of code. An &lt;strong&gt;expression&lt;/strong&gt; is a special statement that can be evaluated to some value.&lt;/p&gt;
&lt;p&gt;For example, &lt;code&gt;1 + 2&lt;/code&gt; is an expression that evaluates to the value &lt;code&gt;3&lt;/code&gt;, while &lt;code&gt;number = 1 + 2&lt;/code&gt; is an assignment statement that doesn‚Äôt evaluate to a value. Although running the statement &lt;code&gt;number = 1 + 2&lt;/code&gt; doesn‚Äôt evaluate to &lt;code&gt;3&lt;/code&gt;, it does &lt;em&gt;assign&lt;/em&gt; the value &lt;code&gt;3&lt;/code&gt; to &lt;code&gt;number&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In Python, you often see &lt;a href=&quot;https://docs.python.org/3/reference/simple_stmts.html&quot;&gt;simple statements&lt;/a&gt; like &lt;a href=&quot;https://realpython.com/python-return-statement/&quot;&gt;&lt;code&gt;return&lt;/code&gt; statements&lt;/a&gt; and &lt;a href=&quot;https://realpython.com/python-import/&quot;&gt;&lt;code&gt;import&lt;/code&gt; statements&lt;/a&gt;, as well as &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html&quot;&gt;compound statements&lt;/a&gt; like &lt;a href=&quot;https://realpython.com/python-conditional-statements/&quot;&gt;&lt;code&gt;if&lt;/code&gt; statements&lt;/a&gt; and &lt;a href=&quot;https://realpython.com/defining-your-own-python-function/&quot;&gt;function definitions&lt;/a&gt;. These are all statements, not expressions.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;There‚Äôs a subtle‚Äîbut important‚Äîdifference between the two types of assignments seen earlier with the &lt;code&gt;walrus&lt;/code&gt; variable. An assignment expression returns the value, while a traditional assignment doesn‚Äôt. You can see this in action when the REPL doesn‚Äôt print any value after &lt;code&gt;walrus = False&lt;/code&gt; on line 1, while it prints out &lt;code&gt;True&lt;/code&gt; after the assignment expression on line 5.&lt;/p&gt;
&lt;p&gt;You can see another important aspect about walrus operators in this example. Though it might look new, the &lt;code&gt;:=&lt;/code&gt; operator does &lt;em&gt;not&lt;/em&gt; do anything that isn‚Äôt possible without it. It only makes certain constructs more convenient and can sometimes communicate the intent of your code more clearly.&lt;/p&gt;
&lt;div class=&quot;alert alert-primary&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You need at least &lt;a href=&quot;https://realpython.com/python38-new-features/&quot;&gt;Python 3.8&lt;/a&gt; to try out the examples in this tutorial. If you don‚Äôt already have Python 3.8 installed and you have &lt;a href=&quot;https://docs.docker.com/install/&quot;&gt;Docker&lt;/a&gt; available, a quick way to start working with Python 3.8 is to run one of &lt;a href=&quot;https://hub.docker.com/_/python/&quot;&gt;the official Docker images&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight sh&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;docker container run -it --rm python:3.8-slim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will download and run the latest stable version of Python 3.8. For more information, see &lt;a href=&quot;https://realpython.com/python-versions-docker/&quot;&gt;Run Python Versions in Docker: How to Try the Latest Python Release&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now you have a basic idea of what the &lt;code&gt;:=&lt;/code&gt; operator is and what it can do. It‚Äôs an operator used in assignment expressions, which can return the value being assigned, unlike traditional assignment statements. To get deeper and really learn about the walrus operator, continue reading to see where you should and shouldn‚Äôt use it.&lt;/p&gt;
&lt;h3 id=&quot;implementation&quot;&gt;Implementation&lt;a class=&quot;headerlink&quot; href=&quot;#implementation&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Like most new features in Python, assignment expressions were introduced through a &lt;strong&gt;Python Enhancement Proposal&lt;/strong&gt; (PEP). &lt;a href=&quot;https://www.python.org/dev/peps/pep-0572&quot;&gt;PEP 572&lt;/a&gt; describes the motivation for introducing the walrus operator, the details of the syntax, as well as examples where the &lt;code&gt;:=&lt;/code&gt; operator can be used to improve your code.&lt;/p&gt;
&lt;p&gt;This PEP was &lt;a href=&quot;https://mail.python.org/archives/list/python-ideas@python.org/message/H64ZNZ3T4RRJKMXR6UFNX3FK62IRPVOT/&quot;&gt;originally&lt;/a&gt; written by &lt;a href=&quot;https://twitter.com/Rosuav&quot;&gt;Chris Angelico&lt;/a&gt; in February 2018. Following some heated discussion, PEP 572 was &lt;a href=&quot;https://mail.python.org/archives/list/python-dev@python.org/message/J6EBK6ZEHZXTVWYSUO5N5XCUS45UQSB3/&quot;&gt;accepted&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/gvanrossum&quot;&gt;Guido van Rossum&lt;/a&gt; in July 2018. Since then, Guido &lt;a href=&quot;https://mail.python.org/archives/list/python-committers@python.org/message/GQONAGWBBFRHVRUPU7RNBM75MHKGUFJN/&quot;&gt;announced&lt;/a&gt; that he was stepping down from his role as &lt;a href=&quot;https://en.wikipedia.org/wiki/Benevolent_dictator_for_life&quot;&gt;benevolent dictator for life (BDFL)&lt;/a&gt;. Starting in early 2019, Python has been &lt;a href=&quot;https://www.python.org/dev/peps/pep-0013/&quot;&gt;governed&lt;/a&gt; by an elected &lt;a href=&quot;https://realpython.com/python38-new-features/#the-python-steering-council&quot;&gt;steering council&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;The walrus operator was implemented by &lt;a href=&quot;https://realpython.com/interview-emily-morehouse/&quot;&gt;Emily Morehouse&lt;/a&gt;, and made available in the first &lt;a href=&quot;https://www.python.org/downloads/release/python-380a1/&quot;&gt;alpha release&lt;/a&gt; of Python 3.8.&lt;/p&gt;
&lt;h3 id=&quot;motivation&quot;&gt;Motivation&lt;a class=&quot;headerlink&quot; href=&quot;#motivation&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In many languages, including C and its derivatives, assignment statements function as expressions. This can be both very powerful and also a source of confusing bugs. For example, the following code is valid C but doesn‚Äôt execute as intended:&lt;/p&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/python-walrus-operator/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/python-walrus-operator/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #72: Starting With FastAPI and Examining Python&#x27;s Import System</title>
      <id>https://realpython.com/podcasts/rpp/72/</id>
      <link href="https://realpython.com/podcasts/rpp/72/"/>
      <updated>2021-08-06T12:00:00+00:00</updated>
      <summary>Have you heard of FastAPI?  An application programming interface is vital to make your software accessible to users across the internet. FastAPI is an excellent option for quickly creating a web API that implements best practices. This week on the show, David Amos is back, and he&#x27;s brought another batch of PyCoder&#x27;s Weekly articles and projects.</summary>
      <content type="html">
        &lt;p&gt;Have you heard of FastAPI?  An application programming interface is vital to make your software accessible to users across the internet. FastAPI is an excellent option for quickly creating a web API that implements best practices. This week on the show, David Amos is back, and he&#x27;s brought another batch of PyCoder&#x27;s Weekly articles and projects.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Using sleep() to Code a Python Uptime Bot</title>
      <id>https://realpython.com/courses/python-sleep-uptime-bot/</id>
      <link href="https://realpython.com/courses/python-sleep-uptime-bot/"/>
      <updated>2021-08-03T14:00:00+00:00</updated>
      <summary>In this course, you&#x27;ll learn how to add time delays to your Python programs. You&#x27;ll use the built-in time module to add Python sleep() calls to your code. To practice, you&#x27;ll use time.sleep() when making an uptime bot that checks whether a website is still live.</summary>
      <content type="html">
        &lt;p&gt;Have you ever needed to make your Python program wait for something? You might use a Python &lt;code&gt;sleep()&lt;/code&gt; call to simulate a delay in your program. Perhaps you need to wait for a file to upload or download, or for a graphic to load or be drawn to the screen. You might even need to pause between calls to a web &lt;a href=&quot;https://realpython.com/python-api/&quot;&gt;API&lt;/a&gt;, or between queries to a database. Adding Python &lt;strong&gt;&lt;code&gt;sleep()&lt;/code&gt;&lt;/strong&gt; calls to your program can help in each of these cases, and many more!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this course, you&amp;rsquo;ll learn:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The basics of &lt;strong&gt;&lt;code&gt;time.sleep()&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;How you can use &lt;code&gt;timeit&lt;/code&gt; to &lt;strong&gt;measure&lt;/strong&gt; your code&amp;rsquo;s &lt;strong&gt;execution time&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;How to use &lt;code&gt;time.sleep()&lt;/code&gt; to build an &lt;strong&gt;uptime bot&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #71: Start Using a Debugger With Your Python Code</title>
      <id>https://realpython.com/podcasts/rpp/71/</id>
      <link href="https://realpython.com/podcasts/rpp/71/"/>
      <updated>2021-07-30T12:00:00+00:00</updated>
      <summary>Are you still sprinkling print statements throughout your code while writing it? Print statements are often clunky and offer only a limited view of the state of your code. Have you thought there must be a better way? This week on the show, we have Nina Zakharenko to discuss her conference talk titled &quot;Goodbye Print, Hello Debugger.&quot;</summary>
      <content type="html">
        &lt;p&gt;Are you still sprinkling print statements throughout your code while writing it? Print statements are often clunky and offer only a limited view of the state of your code. Have you thought there must be a better way? This week on the show, we have Nina Zakharenko to discuss her conference talk titled &quot;Goodbye Print, Hello Debugger.&quot;&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Pandas DataFrame: Working With Data Efficiently</title>
      <id>https://realpython.com/courses/pandas-dataframe-working-with-data/</id>
      <link href="https://realpython.com/courses/pandas-dataframe-working-with-data/"/>
      <updated>2021-07-27T14:00:00+00:00</updated>
      <summary>In this course, you&#x27;ll get started with Pandas DataFrames, which are powerful and widely used two-dimensional data structures. You&#x27;ll learn how to perform basic operations with data, handle missing values, work with time-series data, and visualize data from a Pandas DataFrame.</summary>
      <content type="html">
        &lt;p&gt;The &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/reference/frame.html&quot;&gt;Pandas DataFrame&lt;/a&gt; is a &lt;a href=&quot;https://pandas.pydata.org/pandas-docs/stable/user_guide/dsintro.html&quot;&gt;structure&lt;/a&gt; that contains &lt;strong&gt;two-dimensional data&lt;/strong&gt; and its corresponding &lt;strong&gt;labels&lt;/strong&gt;. DataFrames are widely used in &lt;a href=&quot;https://realpython.com/tutorials/data-science/&quot;&gt;data science&lt;/a&gt;, &lt;a href=&quot;https://realpython.com/tutorials/machine-learning/&quot;&gt;machine learning&lt;/a&gt;, scientific computing, and many other data-intensive fields.&lt;/p&gt;
&lt;p&gt;DataFrames are similar to &lt;a href=&quot;https://realpython.com/python-sql-libraries/&quot;&gt;SQL tables&lt;/a&gt; or the spreadsheets that you work with in Excel or Calc. In many cases, DataFrames are faster, easier to use, and more powerful than tables or spreadsheets because they&amp;rsquo;re an integral part of the &lt;a href=&quot;https://www.python.org/about/&quot;&gt;Python&lt;/a&gt; and &lt;a href=&quot;https://numpy.org/#&quot;&gt;NumPy&lt;/a&gt; ecosystems.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this course, you&amp;rsquo;ll learn:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What a &lt;strong&gt;Pandas DataFrame&lt;/strong&gt; is and how to create one&lt;/li&gt;
&lt;li&gt;How to &lt;strong&gt;access, modify, add, sort, filter, and delete&lt;/strong&gt; data&lt;/li&gt;
&lt;li&gt;How to handle &lt;strong&gt;missing values&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;How to work with &lt;strong&gt;time-series data&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;How to quickly &lt;strong&gt;visualize&lt;/strong&gt; data&lt;/li&gt;
&lt;/ul&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #70: What Can You Do With Python and Counting Objects Using &quot;Counter&quot;</title>
      <id>https://realpython.com/podcasts/rpp/70/</id>
      <link href="https://realpython.com/podcasts/rpp/70/"/>
      <updated>2021-07-23T12:00:00+00:00</updated>
      <summary>How is Python being used today, and what can you do with the language? Do you want to develop software, dive into data science and math, automate parts of your job and  digital life, or work with electronics? This week on the show, David Amos is back, and he&#x27;s brought another batch of PyCoder&#x27;s Weekly articles and projects.</summary>
      <content type="html">
        &lt;p&gt;How is Python being used today, and what can you do with the language? Do you want to develop software, dive into data science and math, automate parts of your job and  digital life, or work with electronics? This week on the show, David Amos is back, and he&#x27;s brought another batch of PyCoder&#x27;s Weekly articles and projects.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Speech Recognition With Python</title>
      <id>https://realpython.com/courses/speech-recognition-python/</id>
      <link href="https://realpython.com/courses/speech-recognition-python/"/>
      <updated>2021-07-20T14:00:00+00:00</updated>
      <summary>In this course, you&#x27;ll cover the fundamentals of speech recognition with Python. You&#x27;ll learn which speech recognition library gives the best results and build a full-featured &quot;Guess The Word&quot; game with it.</summary>
      <content type="html">
        &lt;p&gt;Have you ever wondered how to add speech recognition to your Python project? It&amp;rsquo;s more straightforward than you might think. In this course, you&amp;rsquo;ll find out how.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this course, you&amp;rsquo;ll learn:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How &lt;strong&gt;speech recognition&lt;/strong&gt; works&lt;/li&gt;
&lt;li&gt;What speech recognition &lt;strong&gt;packages&lt;/strong&gt; are available on PyPI&lt;/li&gt;
&lt;li&gt;How to install and use the &lt;strong&gt;SpeechRecognition package&lt;/strong&gt;&amp;mdash;a full-featured and straightforward Python speech recognition library&lt;/li&gt;
&lt;/ul&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  

</feed>
